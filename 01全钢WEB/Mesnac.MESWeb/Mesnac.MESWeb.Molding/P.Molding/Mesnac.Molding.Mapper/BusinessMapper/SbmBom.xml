<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Molding.Mapper.BusinessMapper.SbmBom"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM SBM_BOM ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.LastmodifyDate" prepend="AND">
          <![CDATA[LASTMODIFY_DATE = #where.LastmodifyDate#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.UnitId" prepend="AND">
          <![CDATA[UNIT_ID = #where.UnitId#]]>
        </isNotNull>
        <isNotNull property="where.GroupNum" prepend="AND">
          <![CDATA[GROUP_NUM = #where.GroupNum#]]>
        </isNotNull>
        <isNotNull property="where.GreentyreVersion" prepend="AND">
          <![CDATA[GREENTYRE_VERSION = #where.GreentyreVersion#]]>
        </isNotNull>
        <isNotNull property="where.BomType" prepend="AND">
          <![CDATA[BOM_TYPE = #where.BomType#]]>
        </isNotNull>
        <isNotNull property="where.BomFactroy" prepend="AND">
          <![CDATA[BOM_FACTROY = #where.BomFactroy#]]>
        </isNotNull>
        <isNotNull property="where.BomVersion" prepend="AND">
          <![CDATA[BOM_VERSION = #where.BomVersion#]]>
        </isNotNull>
        <isNotNull property="where.GroupUnitNum" prepend="AND">
          <![CDATA[GROUP_UNIT_NUM = #where.GroupUnitNum#]]>
        </isNotNull>
        <isNotNull property="where.EffectDate" prepend="AND">
          <![CDATA[EFFECT_DATE = #where.EffectDate#]]>
        </isNotNull>
        <isNotNull property="where.LoseEffectDate" prepend="AND">
          <![CDATA[LOSE_EFFECT_DATE = #where.LoseEffectDate#]]>
        </isNotNull>
        <isNotNull property="where.PdmCode" prepend="AND">
          <![CDATA[PDM_CODE = #where.PdmCode#]]>
        </isNotNull>
        <isNotNull property="where.DropFlag" prepend="AND">
          <![CDATA[DROP_FLAG = #where.DropFlag#]]>
        </isNotNull>
        <isNotNull property="where.GreentyreMaterialId" prepend="AND">
          <![CDATA[GREENTYRE_MATERIAL_ID = #where.GreentyreMaterialId#]]>
        </isNotNull>
        <isNotNull property="where.MaterialParentId" prepend="AND">
          <![CDATA[MATERIAL_PARENT_ID = #where.MaterialParentId#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>

     <select id="GetMoldingBomInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
          select distinct t1.sap_code,t2.type_name,t1.minor_type_id,t3.minor_type_name,
        t.objid,t.material_id,t1.material_name,ts.material_name sub1,ts1.material_name sub2,t.unit_id,t.group_num,t.greentyre_version,t.bom_type,t.bom_factroy,t.bom_version,t.pdm_code,t.greentyre_material_id,
        t.material_parent_id,t.group_unit_num,t.lastmodify_date,t.material_type_name
       ,xx1.material_code gydj,xx2.material_code fjlzb,xx4.material_code gsq,xx5.material_code jx,t.spec
         from sbm_bom_data t 
        left join sbm_material t1 on t1.objid  =t.material_id
        left join sbm_bom_type t2 on t2.objid= t.bom_type
        left join sbm_material_minor_type t3 on t3.objid = t1.minor_type_id
        left join (
        select ttt.material_name,t3.minor_type_name,ttt.minor_type_id,tt.* from sbm_bom_data tt 
        left join sbm_material ttt on ttt.objid = tt.material_id
        left join sbm_material_minor_type t3 on t3.objid = ttt.minor_type_id
        where  tt.delete_flag=0) ts on ts.material_parent_id = t.material_id and ts.minor_type_id in(5,20)
        left join (
        select ttt.material_name,t3.minor_type_name,ttt.minor_type_id,tt.* from sbm_bom_data tt 
        left join sbm_material ttt on ttt.objid = tt.material_id
        left join sbm_material_minor_type t3 on t3.objid = ttt.minor_type_id
        where  tt.delete_flag=0) ts1 on ts1.material_parent_id = t.material_id and ts1.minor_type_id in(17)
        left join sbm_bom_data x1 on x1.material_parent_id = t.material_id and x1.delete_flag = 0 and x1.greentyre_version = t.sub_item_revision 
       and (t.material_type_name like '%钢丝包布%' or t.material_type_name like '%胎体%' or t.material_type_name like '%带束层%') and x1.material_type_name like '%钢压大卷%'
       left join sbm_material xx1 on xx1.objid = x1.material_id
        left join sbm_bom_data x2 on x2.material_parent_id = t.material_id and x2.delete_flag = 0 and x2.greentyre_version = t.sub_item_revision 
       and t.material_type_name like '%尼龙包布%' and x2.material_type_name like '%覆胶帘子布%'
       left join sbm_material xx2 on xx2.objid = x2.material_id
        left join sbm_bom_data x4 on x4.material_parent_id = t.material_id and x4.delete_flag = 0 and x4.greentyre_version = t.sub_item_revision 
       and t.material_type_name like '%胎圈%' and x4.material_type_name like '%钢丝圈%'
       left join sbm_material xx4 on xx4.objid = x4.material_id
        left join sbm_bom_data x5 on x5.material_parent_id = t.material_id and x5.delete_flag = 0 and x5.greentyre_version = t.sub_item_revision 
       and t.material_type_name like '%胎圈%' and x5.material_type_name like '%胶%'
       left join sbm_material xx5 on xx5.objid = x5.material_id
        
        where t.delete_flag=0 and t.material_parent_id = (select material_id from v_bpt_molding_tech where objid = #techId#)
        and t.bom_version=#bomId# and t.greentyre_version = (select pdm_version from v_bpt_molding_tech where objid = #techId#)
        
       ]]>
     </select>
     
     <select id="GetShiGongHppCode" parameterClass="map" resultClass="Row">
       <![CDATA[
select max(decode(y.material_type_name,'全钢胎侧卷',y.spec,null)) 全钢胎侧,max(decode(y.material_type_name,'全钢内衬层',y.spec,null)) 全钢内衬层,
max(decode(y.material_type_name,'全钢隔离胶片',y.spec,null)) 封口胶片,max(decode(y.material_type_name,'全钢钢丝包布_1',y.spec,null)) 全钢钢丝包布_1,
max(decode(y.material_type_name,'全钢钢丝包布_2',y.spec,null)) 全钢钢丝包布_2,max(decode(y.material_type_name,'全钢钢丝包布_3',y.spec,null)) 全钢钢丝包布_3,
max(decode(y.material_type_name,'全钢钢丝包布_1',y.gydj,null)) 全钢钢丝包布_1GY,max(decode(y.material_type_name,'全钢钢丝包布_2',y.gydj,null)) 全钢钢丝包布_2GY,
max(decode(y.material_type_name,'全钢钢丝包布_3',y.gydj,null)) 全钢钢丝包布_3GY,max(decode(y.material_type_name,'全钢尼龙包布_1',y.spec,null)) 全钢尼龙包布_1,
max(decode(y.material_type_name,'全钢尼龙包布_2',y.spec,null)) 全钢尼龙包布_2,max(decode(y.material_type_name,'全钢尼龙包布_1',y.fjlzb,null)) 全钢尼龙包布_1FJ,
max(decode(y.material_type_name,'全钢尼龙包布_2',y.fjlzb,null)) 全钢尼龙包布_2FJ,max(decode(y.material_type_name,'全钢型胶',y.spec,null)) 全钢型胶1,
max(decode(y.material_type_name,'全钢型胶2',y.spec,null)) 全钢型胶2,max(decode(y.material_type_name,'全钢胎体',y.spec,null)) 全钢胎体,
max(decode(y.material_type_name,'全钢胎体GY',y.gydj,null)) 全钢胎体GY,max(decode(y.material_type_name,'全钢垫胶',y.spec,null)) 全钢垫胶,
max(decode(y.material_type_name,'全钢胎圈',y.spec,null)) 全钢胎圈,max(decode(y.material_type_name,'全钢胎圈GSQ',y.GSQ,null)) 全钢胎圈GSQ,
max(decode(y.material_type_name,'全钢胎圈JX',y.JX,null)) 全钢胎圈JX,max(decode(y.material_type_name,'全钢带束层_1',y.spec,null)) 全钢带束层_1,
max(decode(y.material_type_name,'全钢带束层_2',y.spec,null)) 全钢带束层_2,max(decode(y.material_type_name,'全钢带束层_3',y.spec,null)) 全钢带束层_3,
max(decode(y.material_type_name,'全钢带束层_4',y.spec,null)) 全钢带束层_4,max(decode(y.material_type_name,'全钢零度带束层',y.spec,null)) 全钢零度带束层,
max(decode(y.material_type_name,'全钢带束层_1GY',y.GYDJ,null)) 全钢带束层_1GY,max(decode(y.material_type_name,'全钢带束层_2GY',y.GYDJ,null)) 全钢带束层_2GY,
max(decode(y.material_type_name,'全钢带束层_3GY',y.GYDJ,null)) 全钢带束层_3GY,max(decode(y.material_type_name,'全钢带束层_4GY',y.GYDJ,null)) 全钢带束层_4GY,
max(decode(y.material_type_name,'全钢零度带束层GY',y.GYDJ,null)) 全钢零度带束层GY,max(decode(y.material_type_name,'全钢胎面',y.spec,null)) 全钢胎面1,
max(decode(y.material_type_name,'全钢胎面2',y.spec,null)) 全钢胎面2,max(decode(y.material_type_name,'全钢胎面3',y.spec,null)) 全钢胎面3
 from (
  select distinct t.material_type_name,xx1.pdm_code gydj,xx2.pdm_code fjlzb,xx4.pdm_code gsq,xx5.pdm_code jx,t.spec
         from sbm_bom_data t 
        left join sbm_bom_data x1 on x1.material_parent_id = t.material_id and x1.delete_flag = 0 and x1.greentyre_version = t.sub_item_revision 
       and (t.material_type_name like '%钢丝包布%' or t.material_type_name like '%胎体%' or t.material_type_name like '%带束层%') and x1.material_type_name like '%钢压大卷%'
       left join sbm_material xx1 on xx1.objid = x1.material_id
        left join sbm_bom_data x2 on x2.material_parent_id = t.material_id and x2.delete_flag = 0 and x2.greentyre_version = t.sub_item_revision 
       and t.material_type_name like '%尼龙包布%' and x2.material_type_name like '%覆胶帘子布%'
       left join sbm_material xx2 on xx2.objid = x2.material_id
        left join sbm_bom_data x4 on x4.material_parent_id = t.material_id and x4.delete_flag = 0 and x4.greentyre_version = t.sub_item_revision 
       and t.material_type_name like '%胎圈%' and x4.material_type_name like '%钢丝圈%'
       left join sbm_material xx4 on xx4.objid = x4.material_id
        left join sbm_bom_data x5 on x5.material_parent_id = t.material_id and x5.delete_flag = 0 and x5.greentyre_version = t.sub_item_revision 
       and t.material_type_name like '%胎圈%' and x5.material_type_name like '%胶%'
       left join sbm_material xx5 on xx5.objid = x5.material_id
        where t.delete_flag=0 and t.material_parent_id = (select material_id from v_bpt_molding_tech where objid = #techID#)
        and t.greentyre_version = (select pdm_version from v_bpt_molding_tech where objid = #techID#)
        ) y
        
       ]]>
     </select>
         
     <select id="GetShiGongHppWeight" parameterClass="map" resultClass="Row">
       <![CDATA[
           select max(decode(x.subitemdesc,'全钢胎侧卷',x.weight,null)) 全钢胎侧,max(decode(x.subitemdesc,'全钢内衬层',x.weight,null)) 全钢内衬层
 ,max(decode(x.subitemdesc,'全钢隔离胶片',x.weight,null)) 封口胶片,max(decode(x.subitemdesc,'全钢钢丝包布_1',x.weight,null)) 全钢钢丝包布_1
 ,max(decode(x.subitemdesc,'全钢钢丝包布_2',x.weight,null)) 全钢钢丝包布_2,max(decode(x.subitemdesc,'全钢钢丝包布_3',x.weight,null)) 全钢钢丝包布_3
 ,max(decode(x.subitemdesc,'全钢尼龙包布_1',x.weight,null)) 全钢尼龙包布_1,max(decode(x.subitemdesc,'全钢尼龙包布_2',x.weight,null)) 全钢尼龙包布_2
 ,max(decode(x.subitemdesc,'全钢型胶',x.weight,null)) 全钢型胶1,max(decode(x.subitemdesc,'全钢型胶2',x.weight,null)) 全钢型胶2
,max(decode(x.subitemdesc,'全钢胎体',x.weight,null)) 全钢胎体,max(decode(x.subitemdesc,'全钢卷曲垫胶',x.weight,null)) 全钢垫胶
,max(decode(x.subitemdesc,'全钢胎圈',x.weight,null)) 全钢胎圈,max(decode(x.subitemdesc,'全钢带束层_1',x.weight,null)) 全钢带束层_1
,max(decode(x.subitemdesc,'全钢带束层_2',x.weight,null)) 全钢带束层_2,max(decode(x.subitemdesc,'全钢带束层_3',x.weight,null)) 全钢带束层_3
,max(decode(x.subitemdesc,'全钢带束层_4',x.weight,null)) 全钢带束层_4,max(decode(x.subitemdesc,'全钢零度带束层',x.weight,null)) 全钢零度带束层
,max(decode(x.subitemdesc,'全钢胎面',x.weight,null)) 全钢胎面1,max(decode(x.subitemdesc,'全钢胎面2',x.weight,null)) 全钢胎面2
,max(decode(x.subitemdesc,'全钢胎面3',x.weight,null)) 全钢胎面3
 from (
 select e.objid,e.weight,e.subitemdesc  from   bpt_molding_tech   a
left join sbm_bom b on a.material_id = b.material_parent_id and b.delete_flag = 0
left join sbm_material c on c.objid = b.material_id and c.delete_flag = 0
left join sbm_material d on d.objid = b.material_parent_id and d.delete_flag = 0
left join plm_half_weight e on substr(e.mastersap,0,9) = substr(d.sap_code,0,9) and substr(e.subitemsap,0,9) = substr(c.sap_code,0,9) and dummy1 = 0
and e.masterrevision = b.greentyre_version  and a.pdm_version = e.masterrevision
where a.objid = #techID# and e.weight is not null
) x
       ]]>
     </select>
     <select id="GetBomConsumeInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
        SELECT T1.MATERIAL_ID,T1.GROUP_NUM,T1.GROUP_UNIT_NUM,T2.MINOR_TYPE_ID FROM SBM_BOM_DATA T1 
        LEFT JOIN SBM_MATERIAL T2 ON T2.OBJID = T1.MATERIAL_ID
        WHERE T1.DELETE_FLAG=0
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="materialId" prepend="AND">
           <![CDATA[T1.MATERIAL_PARENT_ID=#materialId#]]>
         </isNotNull>
         <isNotNull property="flag" prepend="AND">
           <![CDATA[T1.GREENTYRE_VERSION=#flag#]]>
         </isNotNull>
         <isNotNull property="semisMaterialId" prepend="AND">
           <![CDATA[T1.MATERIAL_ID=#semisMaterialId#]]>
         </isNotNull>
         <isNotNull property="version" prepend="AND">
           <![CDATA[T1.BOM_VERSION=#version#]]>
         </isNotNull>
       </dynamic>
     </select>
  </statements>
</sqlMap>
