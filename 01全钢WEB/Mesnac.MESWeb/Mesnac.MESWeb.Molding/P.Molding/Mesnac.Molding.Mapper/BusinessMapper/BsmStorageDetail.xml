<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Molding.Mapper.BusinessMapper.BsmStorageDetail"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <statements>
    <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM BSM_STORAGE_DETAIL ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
      <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.FactoryId" prepend="AND">
          <![CDATA[FACTORY_ID = #where.FactoryId#]]>
        </isNotNull>
        <isNotNull property="where.SeqIndex" prepend="AND">
          <![CDATA[SEQ_INDEX = #where.SeqIndex#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
        <isNotNull property="where.StorageMainId" prepend="AND">
          <![CDATA[STORAGE_MAIN_ID = #where.StorageMainId#]]>
        </isNotNull>
        <isNotNull property="where.StorageToolingId" prepend="AND">
          <![CDATA[STORAGE_TOOLING_ID = #where.StorageToolingId#]]>
        </isNotNull>
        <isNotNull property="where.GreenTyreId" prepend="AND">
          <![CDATA[GREEN_TYRE_ID = #where.GreenTyreId#]]>
        </isNotNull>
        <isNotNull property="where.GreenTyreNo" prepend="AND">
          <![CDATA[GREEN_TYRE_NO = #where.GreenTyreNo#]]>
        </isNotNull>
        <isNotNull property="where.ScanTime" prepend="AND">
          <![CDATA[SCAN_TIME = #where.ScanTime#]]>
        </isNotNull>
        <isNotNull property="where.ScannerId" prepend="AND">
          <![CDATA[SCANNER_ID = #where.ScannerId#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row">
      <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>

    <select id="wsGetMoldingStorageDetailInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
      select t1.STORE_ID, t1.STORE_PLACE_ID, t1.MATERIAL_ID, t1.STOCK_AMOUNT
      , t2.STORAGE_MAIN_ID, t2.TOOLING_ID, t2.TOOLING_BARCODE, t2.LOAD_AMOUNT, t2.IN_TIME
      , t3.STORAGE_TOOLING_ID, t3.GREEN_TYRE_ID, t3.GREEN_TYRE_NO, t3.SCAN_TIME
      , t4.STORE_NAME, t5.STORE_PLACE_NAME, t6.MATERIAL_NAME
      from BSM_STORAGE_MAIN t1
      join BSM_STORAGE_TOOLING t2 on t1.OBJID = t2.STORAGE_MAIN_ID
      join BSM_STORAGE_DETAIL t3 on t2.OBJID = t3.STORAGE_TOOLING_ID
      left join BSM_STORE t4 on t4.OBJID = t1.STORE_ID
      left join BSM_STORE_PLACE t5 on t5.OBJID = t1.STORE_PLACE_ID
      left join SBM_MATERIAL t6 on t6.OBJID = t1.MATERIAL_ID
      where 1 = 1
      -- and t1.DELETE_FLAG = 0 and t2.DELETE_FLAG = 0 and t3.DELETE_FLAG = 0
      ]]>
      <dynamic>
        <isNotNull property="ToolingBarcode" prepend="and">
          <![CDATA[t2.TOOLING_BARCODE = #ToolingBarcode#]]>
        </isNotNull>
      </dynamic>
      <isNull property="OrderString" prepend="">
        ORDER BY t3.GREEN_TYRE_NO
      </isNull>
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </select>

    <select id ="GetTyreStorageInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
      SELECT * FROM BSM_STORAGE_DETAIL WHERE DELETE_FLAG = 0
      ]]>
      <dynamic prepend="AND">
        <isNotNull property="GreenTyreNo" prepend="AND">
          <![CDATA[GREEN_TYRE_NO=#GreenTyreNo#]]>
        </isNotNull>
      </dynamic>
    </select>
    
    <select id="GetToolingLoadAmount" parameterClass="map" resultClass="Row">
      <![CDATA[
      SELECT T1.LOAD_AMOUNT,T1.OBJID,T1.TOOLING_ID,T0.STORAGE_MAIN_ID,T2.STOCK_AMOUNT FROM BSM_STORAGE_DETAIL T0
      LEFT JOIN BSM_STORAGE_TOOLING T1 ON T1.OBJID = T0.STORAGE_TOOLING_ID
      LEFT JOIN BSM_STORAGE_MAIN T2 ON T2.OBJID = T0.STORAGE_MAIN_ID
      WHERE T0.DELETE_FLAG = 0
      ]]>
      <dynamic prepend="AND">
        <isNotNull property="GreenTyreNo" prepend="AND">
          <![CDATA[T0.GREEN_TYRE_NO = #GreenTyreNo#]]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetBarcodeVerify" parameterClass="map" resultClass="Row">
      <![CDATA[
            SELECT TL.GREEN_TYRE_NO , TL.VERIFY1 FROM BSM_STORAGE_DETAIL TL
       ]]>
      <isNotNull property="DELETE_FLAG" prepend="AND">
        <![CDATA[Tl.DELETE_FLAG=0]]>
      </isNotNull>
      <isNotNull property="Barcode" prepend="AND">
        <![CDATA[T.CARD_NO=#Barcode#]]>
      </isNotNull>
    </select>
    <update id="UpdateFrostVerify" parameterClass="map"  >
      <![CDATA[ UPDATE BSM_STORAGE_DETAIL TL SET TL.VERIFY1=0 WHERE TL.GREEN_TYRE_NO = #barcode# ]]>
    </update>
    <update id="UpdateUnfreezeVerify" parameterClass="map"  >
      <![CDATA[ UPDATE BSM_STORAGE_DETAIL TL SET TL.VERIFY1=1 WHERE TL.GREEN_TYRE_NO = #barcode# ]]>
    </update>



    <select id="GetBsmStorageGreenType" parameterClass="map" resultClass="Row">
      <![CDATA[       
      SELECT T.GREEN_TYRE_NO ,T1.MATERIAL_ID FROM BSM_STORAGE_DETAIL T
          LEFT JOIN BSM_STORAGE_TOOLING T1 ON T.STORAGE_TOOLING_ID = T1.OBJID WHERE T.DELETE_FLAG=0 AND T1.DELETE_FLAG=0 AND T1.TOOLING_BARCODE=#ToolingBarcode#
       ]]>
    </select>

    <select id="GetStorageDetailInfo1" parameterClass="map" resultClass="Row">
      <![CDATA[
         SELECT T.GREEN_TYRE_NO,T1.TOOLING_BARCODE FROM BSM_STORAGE_DETAIL T
         LEFT JOIN BSM_STORAGE_TOOLING T1 ON T1.OBJID = T.STORAGE_TOOLING_ID
      ]]>
      <dynamic prepend="WHERE">
        <isNotNull property="where.GreenTyreNo" prepend="AND">
          <![CDATA[T.GREEN_TYRE_NO=#where.GreenTyreNo#]]>
        </isNotNull>
        <isNotNull property="where.GreenTyreNoAndCar" prepend="AND">
          <![CDATA[T1.TOOLING_BARCODE=#where.GreenTyreNoAndCar#]]>
        </isNotNull>
      </dynamic>
    </select>
    
    <update id="storageDetailUpdate" parameterClass="map" >
      <![CDATA[update bsm_storage_detail t set t.storage_main_id=0 where t.storage_main_id=#StorageMainId#]]>
    </update>
    
    <update id="PDstorageDetail" parameterClass="map" >
      <![CDATA[update bsm_storage_detail t set t.storage_main_id=#StorageMainId# where t.green_tyre_no=#GreenNo#]]>
    </update>
    <select id="GetExceedTimeInfo" parameterClass="map" resultClass="Row">
      <![CDATA[          
          SELECT T2.OBJID, (CASE T2.TOOLING_ID WHEN 1 THEN '放行' ELSE '未处理' END)  PASS_FLAG,
                 T.GREEN_TYRE_NO,T2.TOOLING_BARCODE,T3.MATERIAL_NAME,T.END_TIME IN_TIME ,
                 TO_DATE(TO_CHAR(T.END_TIME+T4.VALID_TIME/24,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') AS YA_TIME 
                 ,T.YC_TIME
                 ,t5.user_name PASS_USER
                 ,CASE T.Seq_Index WHEN 11 THEN '超期使用放行' WHEN 12 THEN '提前使用放行' END PASS_MEMO
                 FROM BPM_PRODUCTION T 
                LEFT JOIN BSM_STORAGE_DETAIL T1 ON T1.GREEN_TYRE_NO = T.GREEN_TYRE_NO
                LEFT JOIN BSM_STORAGE_TOOLING T2 ON T2.OBJID = T1.STORAGE_TOOLING_ID
                LEFT JOIN SBM_MATERIAL T3 ON T3.OBJID = T2.MATERIAL_ID
                LEFT JOIN SBM_MATERIAL_INFO T4 ON T4.MATERIAL_ID = T3.OBJID
                left join ssb_user t5 on t5.objid = t.backup_flag 
                WHERE  T.DELETE_FLAG=0 AND  T4.MATERIAL_MINOR_TYPE NOT IN(32,33)]]>
      <dynamic prepend="AND" >
        <isNotNull property="CARD_NO" prepend="AND">
          <![CDATA[T.GREEN_TYRE_NO = #CARD_NO#]]>
        </isNotNull>
        <isNotNull property="CHECK_END_DATE" prepend="AND">
          <![CDATA[T.END_TIME <= #CHECK_END_DATE#]]>
        </isNotNull>
        <isNotNull property="CHECK_BEGIN_DATE" prepend="AND">
          <![CDATA[T.END_TIME >= #CHECK_BEGIN_DATE#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[ ORDER BY T.END_TIME]]>
    </select>

    <select id="GetExceedTimeInfoHistory" parameterClass="map" resultClass="Row">
      <![CDATA[          
          SELECT T.OBJID, (CASE NVL(T.MONTH_FLAG,0) WHEN 99 THEN '放行' ELSE '未处理' END)  PASS_FLAG,
                 T.GREEN_TYRE_NO,'' TOOLING_BARCODE,T3.MATERIAL_NAME,T.END_TIME IN_TIME ,
                 TO_DATE(TO_CHAR(T.END_TIME+T4.VALID_TIME/24,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') AS YA_TIME 
                 ,T.YC_TIME
                 ,t5.user_name PASS_USER,T.BACKUP_TIME FX_TIME
                 ,CASE T.Seq_Index WHEN 11 THEN '超期使用放行' WHEN 12 THEN '提前使用放行' WHEN 1 THEN '首件胎胚自动放行' END PASS_MEMO
                 FROM BPM_PRODUCTION T 
                 LEFT JOIN bpp_plan_detail t2 on t.plan_detail_id = t2.objid
                LEFT JOIN SBM_MATERIAL T3 ON T3.OBJID = t2.material_id
                LEFT JOIN SBM_MATERIAL_INFO T4 ON T4.MATERIAL_ID = T3.OBJID
                left join ssb_user t5 on t5.objid = t.backup_flag 
                WHERE  T.DELETE_FLAG=0 AND  T4.MATERIAL_MINOR_TYPE NOT IN(32,33) 
                and t.month_flag = 99]]>
      <dynamic prepend="AND" >
        <isNotNull property="CARD_NO" prepend="AND">
          <![CDATA[T.GREEN_TYRE_NO = #CARD_NO#]]>
        </isNotNull>
        <isNotNull property="CHECK_END_DATE" prepend="AND">
          <![CDATA[T.Backup_Time <= #CHECK_END_DATE#]]>
        </isNotNull>
        <isNotNull property="CHECK_BEGIN_DATE" prepend="AND">
          <![CDATA[T.Backup_Time >= #CHECK_BEGIN_DATE#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[ ORDER BY T.Backup_Time]]>
    </select>

    <select id="GetMoldingStorePlaceFlag" parameterClass="map" resultClass="Row">
      <![CDATA[
      select * from hpp_store_place b  where b.store_place_name  like '%成型机投入%' 
      and b.delete_flag = 0 order by store_place_name
      ]]>
    </select>

    <select id="GetBarCodeStorePlaceInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
        select t2.material_name,t1.left_qty,t3.store_place_name, t.* from HPP_STORAGE_DETAIL t 
        inner join hpp_semis_production t1 on t.card_no = t1.card_no and t1.delete_flag = 0 and t.delete_flag = 0
        inner join sbm_material t2 on t1.material_id = t2.objid and t2.delete_flag = 0
        left join hpp_store_place t3 on t.store_place_id = t3.objid and t3.store_place_name like '%成型机投入%'
        where 1=1
      ]]>
      <dynamic prepend="AND">
        <isNotNull property="BarCode" prepend="AND">
          <![CDATA[t.card_no = #BarCode#]]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetStorePlaceCount" parameterClass="map" resultClass="Row">
      <![CDATA[
         SELECT COUNT(A.OBJID) NUM FROM HPP_STORAGE_DETAIL A 
         LEFT JOIN hpp_semis_production B ON A.card_no = B.card_no
         WHERE A.DELETE_FLAG = 0
         AND B.left_qty > 0
      ]]>
      <dynamic prepend="AND" >
        <isNotNull property="StorePlaceID" prepend="AND">
          <![CDATA[A.store_place_id = #StorePlaceID#]]>
        </isNotNull>
      </dynamic>
    </select>

    <update id="UpdateStorePlaceInfo" parameterClass="map" >
      <![CDATA[
         update hpp_storage_detail set store_place_id = 0
         where 1=1
      ]]>
      <dynamic prepend="AND" >
        <isNotNull property="StorePlaceID" prepend="AND">
          <![CDATA[store_place_id = #StorePlaceID#]]>
        </isNotNull>
      </dynamic>
    </update>

    <select id="SubmitStorePlaceDt" parameterClass="map"  resultClass="Row">
      <![CDATA[
select b.store_place_name from hpp_storage_detail a,hpp_store_place b where a.store_place_id = b.objid and card_no = #CardNo#
      ]]>
    </select>
    
    <update id="SubmitStorePlaceInfo" parameterClass="map" >
      <![CDATA[
         update HPP_STORAGE_DETAIL set store_place_id = #StorePlaceID#
         where delete_flag = 0
      ]]>
      <dynamic prepend="AND" >
        <isNotNull property="CardNo" prepend="AND">
          <![CDATA[card_no = #CardNo#]]>
        </isNotNull>
      </dynamic>
    </update>

    <select id="GetBarcodeExists" parameterClass="map" resultClass="Row">
      <![CDATA[
       SELECT T4.TOOLING_RFID_BARCODE SHELF_NO,T.CARD_NO,T1.MATERIAL_NAME,T.QTY,T.End_Time RECORD_TIME,T.MATERIAL_ID,t.LEFT_QTY 
       ,case when sysdate > (T.END_TIME + T5.VALID_TIME/24+ nvl(t.dummy9,0)) then 1 else 0 end CQFlag
       ,case when sysdate < (T.END_TIME + T5.MIN_TIME/24) then 1 else 0 end TFFlag
       ,nvl(t.dummy2,0) dummy2,nvl(t.dummy1,0) dummy1
       ,NVL(GRADEID,0) GRADEID,NVL(STATE_FLAG,0) STATE_FLAG
       FROM HPP_SEMIS_PRODUCTION T
       INNER JOIN SBM_MATERIAL T1 ON T1.OBJID = T.MATERIAL_ID
       INNER JOIN HPP_STORAGE_DETAIL T2 ON T2.CARD_NO = T.CARD_NO
       INNER JOIN HSM_TOOLING_LOAD T3 ON T3.CARD_NO = T.CARD_NO
       INNER JOIN HSM_TOOLING T4 ON T3.TOOLING_ID = T4.OBJID
       INNER JOIN SBM_MATERIAL_INFO T5 ON T5.MATERIAL_ID = T.MATERIAL_ID
       LEFT JOIN HQC_QCRECORD T6 ON T6.CARD_NO = T.CARD_NO AND T6.NEW_FLAG = 1
       WHERE T.DELETE_FLAG=0
       ]]>
      <isNotNull property="Barcode" prepend="AND">
        <![CDATA[T.CARD_NO=#Barcode#]]>
      </isNotNull>
    </select>
    <select id="getAutoScrollInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
      select t3.store_name,t4.store_place_name,t6.material_full_name,t5.record_time,
      to_char(T5.RECORD_TIME+T7.valid_time/24,'yyyy-mm-dd hh24:mi:ss') valid_time,t2.tooling_barcode,t1.green_tyre_no from bsm_storage_main t
      left join bsm_storage_detail t1 on t1.storage_main_id = t.objid
      left join bsm_storage_tooling t2 on t2.objid = t1.storage_tooling_id
      left join bsm_store t3 on t3.objid = t.store_id
      left join bsm_store_place t4 on t4.objid = t.store_place_id
      left join bpm_production t5 on t5.green_tyre_no = t1.green_tyre_no
      left join sbm_material t6 on t6.objid = t.material_id
      left join sbm_material_info t7 on t7.material_id = t6.objid
      where t.delete_flag=0 and t1.delete_flag=0
       ]]>
      <isNotNull property="ObjId" prepend="AND">
        <![CDATA[t.store_id=#ObjId#]]>
      </isNotNull>
      <isNotNull property="MaterialId" prepend="AND">
        <![CDATA[t.material_id=#MaterialId#]]>
      </isNotNull>
      <isNotNull property="MaterialName" prepend="AND">
        <![CDATA[t6.material_full_name like '%' || #MaterialName# || '%']]>
      </isNotNull>
      <isNotNull property="aplace" prepend="AND">
        <![CDATA[( t4.store_place_name like '%' || #aplace# || '%']]>
      </isNotNull>
      <isNotNull property="bplace" prepend="OR">
        <![CDATA[t4.store_place_name like '%' || #bplace# || '%']]>
      </isNotNull>
      <isNotNull property="cplace" prepend="OR">
        <![CDATA[t4.store_place_name like '%' || #cplace# || '%']]>
      </isNotNull>
      <isNotNull property="dplace" prepend="OR">
        <![CDATA[t4.store_place_name like '%' || #dplace# || '%']]>
      </isNotNull>
      <isNotNull property="eplace" prepend="OR">
        <![CDATA[t4.store_place_name like '%' || #eplace# || '%']]>
      </isNotNull>
      <isNotNull property="fplace" prepend="OR">
        <![CDATA[t4.store_place_name like '%' || #fplace# || '%']]>
      </isNotNull>
      <isNotNull property="aplace">
        <![CDATA[)]]>
      </isNotNull>
      <![CDATA[order by valid_time,material_full_name ]]>
    </select>

    <select id="GetSemisBarOutInfo" parameterClass="map" resultClass="Row">
      <![CDATA[          
        SELECT A.OBJID,CASE to_char(NVL(A.BACKUP_FLAG,'99')) WHEN '0' THEN '未处理' ELSE '放行' END STATE,A.CARD_NO,C.MATERIAL_NAME,A.END_TIME
  ,case to_char(NVL(A.BACKUP_FLAG,'99')) when '0' then null else D.USER_NAME end USER_NAME
  ,case to_char(NVL(A.BACKUP_FLAG,'99')) when '0' then null else A.BACKUP_TIME end BACKUP_TIME,F.STORE_PLACE_NAME 
 FROM hpp_semis_production A 
LEFT JOIN SBM_MATERIAL C ON C.OBJID = A.MATERIAL_ID
LEFT JOIN SSB_USER D ON D.OBJID = A.BACKUP_FLAG 
LEFT JOIN hpp_storage_detail E ON A.CARD_NO = E.CARD_NO AND E.DELETE_FLAG=0 
LEFT JOIN hpp_store_place F ON F.OBJID = E.store_place_id AND F.DELETE_FLAG = 0
where  A.delete_flag = 0  and F.store_place_name like '%成型机%'
]]>
      <dynamic prepend="AND" >
        <isNotNull property="CARD_NO" prepend="AND">
          <![CDATA[A.CARD_NO = #CARD_NO#]]>
        </isNotNull>
        <isNotNull property="CHECK_END_DATE" prepend="AND">
          <![CDATA[A.END_TIME <= #CHECK_END_DATE#]]>
        </isNotNull>
        <isNotNull property="CHECK_BEGIN_DATE" prepend="AND">
          <![CDATA[A.END_TIME >= #CHECK_BEGIN_DATE#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[ ORDER BY A.END_TIME]]>
    </select>


    <select id="GetSemisRubberBarOutInfo" parameterClass="map" resultClass="Row">
      <![CDATA[          
         select  *  from (  SELECT A.OBJID,CASE to_char(NVL(A.DUMMY8,'99')) WHEN '31' THEN '放行' ELSE '未处理' END STATE,A.CARD_NO,C.MATERIAL_NAME,A.END_TIME,
     CASE to_char(NVL(A.DUMMY8,'99')) WHEN '31' THEN D.USER_NAME else '' end USER_NAME,
     CASE to_char(NVL(A.DUMMY8,'99')) WHEN '31' THEN  A.BACKUP_TIME else null end BACKUP_TIME,F.STORE_PLACE_NAME 
 FROM hpp_semis_production A 
LEFT JOIN SBM_MATERIAL C ON C.OBJID = A.MATERIAL_ID
LEFT JOIN SSB_USER D ON D.OBJID = A.BACKUP_FLAG 
LEFT JOIN hpp_storage_detail E ON A.CARD_NO = E.CARD_NO AND E.DELETE_FLAG=0 
LEFT JOIN hpp_store_place F ON F.OBJID = E.store_place_id AND F.DELETE_FLAG = 0
where  A.delete_flag = 0  and F.used_flag = 1 and F.store_place_name like '%线边库%' and F.store_place_name not like '%成型机%' 
]]>
      <dynamic prepend="AND" >
        <isNotNull property="CARD_NO" prepend="AND">
          <![CDATA[A.CARD_NO = #CARD_NO#]]>
        </isNotNull>
        <isNotNull property="CHECK_END_DATE" prepend="AND">
          <![CDATA[A.END_TIME <= #CHECK_END_DATE#]]>
        </isNotNull>
        <isNotNull property="CHECK_BEGIN_DATE" prepend="AND">
          <![CDATA[A.END_TIME >= #CHECK_BEGIN_DATE#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[ORDER BY A.END_TIME)
union all
select A.OBJID,CASE to_char(NVL(A.DUMMY_5,'99')) WHEN '31' THEN '放行' ELSE '未处理' END STATE,barcode,b.material_name,a.produce_time,
CASE to_char(NVL(A.DUMMY_5,'99')) WHEN '31' THEN c.user_name else '' end user_name, CASE to_char(NVL(A.DUMMY_5,'99')) WHEN '31' THEN a.record_time else null end record_time,f.STORE_PLACE_NAME
 from  hpp_rubber_production a
left join sbm_material b on b.sap_code = a.sap_code
left join ssb_user c on c.objid = a.remark
left join hpp_storage_detail E ON A.barcode = E.CARD_NO AND E.DELETE_FLAG=0 
LEFT JOIN hpp_store_place F ON F.OBJID = E.store_place_id AND F.DELETE_FLAG = 0
where length(a.barcode) <> 21 and a.delete_flag = 0]]>

      <dynamic prepend="AND" >
        <isNotNull property="CARD_NO" prepend="AND">
          <![CDATA[A.BARCODE = #CARD_NO#]]>
        </isNotNull>
        <isNotNull property="CHECK_END_DATE" prepend="AND">
          <![CDATA[A.produce_time <= #CHECK_END_DATE#]]>
        </isNotNull>
        <isNotNull property="CHECK_BEGIN_DATE" prepend="AND">
          <![CDATA[A.produce_time >= #CHECK_BEGIN_DATE#]]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetSemisRubberInfo" parameterClass="map" resultClass="Row">
      <![CDATA[       
update hpp_rubber_production  set dummy_5 = '31',remark =#UserId#,record_time =to_date(#NowTime#,'yyyy-MM-dd hh24:mi:ss') where barcode = #CARD_NO# and delete_flag = 0
]]>
    </select>
    
    
    
    
  </statements>
</sqlMap>
