<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Storage.Mapper.BusinessMapper.PsmMesStorageQty"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM PSM_MES_STORAGE_QTY ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.ShiftDate" prepend="AND">
          <![CDATA[SHIFT_DATE = #where.ShiftDate#]]>
        </isNotNull>
        <isNotNull property="where.ShiftId" prepend="AND">
          <![CDATA[SHIFT_ID = #where.ShiftId#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.MesQty" prepend="AND">
          <![CDATA[MES_QTY = #where.MesQty#]]>
        </isNotNull>
        <isNotNull property="where.Qty" prepend="AND">
          <![CDATA[QTY = #where.Qty#]]>
        </isNotNull>
        <isNotNull property="where.DocDate" prepend="AND">
          <![CDATA[DOC_DATE = #where.DocDate#]]>
        </isNotNull>
        <isNotNull property="where.PostDate" prepend="AND">
          <![CDATA[POST_DATE = #where.PostDate#]]>
        </isNotNull>
        <isNotNull property="where.HeadTxt" prepend="AND">
          <![CDATA[HEAD_TXT = #where.HeadTxt#]]>
        </isNotNull>
        <isNotNull property="where.PlantFrom" prepend="AND">
          <![CDATA[PLANT_FROM = #where.PlantFrom#]]>
        </isNotNull>
        <isNotNull property="where.Storageloc" prepend="AND">
          <![CDATA[STORAGELOC = #where.Storageloc#]]>
        </isNotNull>
        <isNotNull property="where.Batch" prepend="AND">
          <![CDATA[BATCH = #where.Batch#]]>
        </isNotNull>
        <isNotNull property="where.RecPlant" prepend="AND">
          <![CDATA[REC_PLANT = #where.RecPlant#]]>
        </isNotNull>
        <isNotNull property="where.RecStoloc" prepend="AND">
          <![CDATA[REC_STOLOC = #where.RecStoloc#]]>
        </isNotNull>
        <isNotNull property="where.RecBatch" prepend="AND">
          <![CDATA[REC_BATCH = #where.RecBatch#]]>
        </isNotNull>
        <isNotNull property="where.Reciever" prepend="AND">
          <![CDATA[RECIEVER = #where.Reciever#]]>
        </isNotNull>
        <isNotNull property="where.StateFlag" prepend="AND">
          <![CDATA[STATE_FLAG = #where.StateFlag#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
        <isNotNull property="where.SuccessFlag" prepend="AND">
          <![CDATA[SUCCESS_FLAG = #where.SuccessFlag#]]>
        </isNotNull>
        <isNotNull property="where.ReturnMsg" prepend="AND">
          <![CDATA[RETURN_MSG = #where.ReturnMsg#]]>
        </isNotNull>
      <isNotNull property="where.MovType" prepend="AND">
        <![CDATA[MOV_TYPE = #where.MovType#]]>
      </isNotNull>
      <isNotNull property="where.ClassId" prepend="AND">
        <![CDATA[CLASS_ID = #where.ClassId#]]>
      </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>
     <select id="GetStorageQtyInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
        SELECT T2.MATERIAL_NAME,T1.MATERIAL_ID, T1.IN_AMOUNT QTY,T1.IN_DATE SHIFT_DATE
        ,T1.IN_SHIFT_ID SHIFT_ID, T1.IN_CLASS_ID CLASS_ID,T3.CLASS_NAME,
        CASE T1.IN_CLASS_ID WHEN 1 THEN 301 WHEN 2 THEN 302 WHEN 3 THEN 303 END RECIEVER
        ,t1.check_grade_code,T1.dph_grade_code
        ,case when t1.check_grade_code = 1 then T1.SAP_CODE
              when t1.check_grade_code = 2 then '8027'
              when t1.check_grade_code = 3 then '5005'  
              when t1.check_grade_code = 4 then '5005'  end REC_STOLOC
        ,year_batch
        FROM (
          SELECT T1.IN_DATE, T1.IN_CLASS_ID, T1.IN_SHIFT_ID, T1.MATERIAL_ID, T1.SAP_CODE, SUM(T1.IN_AMOUNT) IN_AMOUNT
          ,T1.check_grade_code,T1.dph_grade_code,year_batch
          FROM (
            SELECT T1.IN_DATE, T1.IN_CLASS_ID, T1.IN_SHIFT_ID, count(t4.tyre_no) IN_AMOUNT, T2.MATERIAL_ID, T3.SAP_CODE
            ,t2.check_grade_code,case when t2.check_grade_code <> 1 then 1 else  nvl(T5.UFRANK,2) end dph_grade_code
            ,nvl(to_char(t7.plan_date,'yyyy'),to_char(sysdate,'yyyy')) year_batch
            FROM PSM_IN_STOCK_BILL T1
            JOIN PSM_IN_STOCK_SUMMARY T2 ON T1.OBJID = T2.BILL_ID
            LEFT JOIN PSB_STORE_PLACE T3 ON T3.OBJID = T2.STORE_PLACE_ID
            left JOIN psm_in_stock_detail T4 ON T4.BILL_ID = T1.OBJID AND T4.SUMMARY_ID = T2.OBJID
            LEFT JOIN ( select  t.tyre_id,t.ufrank
 from  (select  row_number()over(PARTITION by a.tyre_id order by a.record_time desc) rn,a.* from fqb_balance_info a) t where t.rn=1) T5 ON T4.TYRE_NO = T5.TYRE_ID
            left join cpp_curing_production t6 on t6.tyre_no = t4.tyre_no and t6.delete_flag = 0
            left join cpp_curing_plan t7 on t6.plan_id = t7.objid 
      ]]>
       <dynamic prepend="WHERE">
         <isNotNull property="DELETE_FLAG" prepend="AND">
           <![CDATA[T1.DELETE_FLAG = #DELETE_FLAG# AND T2.DELETE_FLAG = #DELETE_FLAG#]]>
         </isNotNull>
         <isNotNull property="ShiftDate" prepend="AND">
           <![CDATA[T1.IN_DATE = #ShiftDate#]]>
         </isNotNull>
         <isNotNull property="BeginTime" prepend="AND">
           <![CDATA[T2.RECORD_TIME >= #BeginTime#]]>
         </isNotNull>
         <isNotNull property="EndTime" prepend="AND">
           <![CDATA[T2.RECORD_TIME <= #EndTime#]]>
         </isNotNull>
         <isNotNull property="ClassID" prepend="AND">
           <![CDATA[T1.IN_CLASS_ID = #ClassID#]]>
         </isNotNull>
         <isNotNull property="ShiftID" prepend="AND">
           <![CDATA[T1.IN_SHIFT_ID = #ShiftID#]]>
         </isNotNull>
       </dynamic>
       <![CDATA[
            group by T1.IN_DATE, T1.IN_CLASS_ID, T1.IN_SHIFT_ID, T2.MATERIAL_ID, T3.SAP_CODE
            ,t2.check_grade_code,case when t2.check_grade_code <> 1 then 1 else  nvl(T5.UFRANK,2) end
            ,nvl(to_char(t7.plan_date,'yyyy'),to_char(sysdate,'yyyy'))
       
            UNION ALL

            SELECT T1.RETURN_DATE, T1.RETURN_CLASS_ID, T1.RETURN_SHIFT_ID, 0 - count(t4.tyre_no), T2.MATERIAL_ID, T3.SAP_CODE
            ,t2.check_grade_code,case when t2.check_grade_code <> 1 then 1 else  nvl(T5.UFRANK,2) end dph_grade_code
            ,nvl(to_char(t7.plan_date,'yyyy'),to_char(sysdate,'yyyy')) year_batch
            FROM PSM_RETURN_STOCK_BILL T1
            JOIN PSM_RETURN_STOCK_SUMMARY T2 ON T1.OBJID = T2.BILL_ID
            LEFT JOIN PSB_STORE_PLACE T3 ON T3.OBJID = T2.STORE_PLACE_ID
            left join psm_return_stock_detail t4 on t4.bill_id = t1.objid and t4.summary_id= t2.objid
            left join ( select  t.tyre_id,t.ufrank
 from  (select  row_number()over(PARTITION by a.tyre_id order by a.record_time desc) rn,a.* from fqb_balance_info a) t where t.rn=1) t5 on t4.tyre_no = t5.tyre_id
            left join cpp_curing_production t6 on t6.tyre_no = t4.tyre_no and t6.delete_flag = 0
            left join cpp_curing_plan t7 on t6.plan_id = t7.objid 
      ]]>
       <dynamic prepend="WHERE">
         <isNotNull property="DELETE_FLAG" prepend="AND">
           <![CDATA[T1.DELETE_FLAG = #DELETE_FLAG# AND T2.DELETE_FLAG = #DELETE_FLAG#]]>
         </isNotNull>
         <isNotNull property="ShiftDate" prepend="AND">
           <![CDATA[T1.RETURN_DATE = #ShiftDate#]]>
         </isNotNull>
         <isNotNull property="BeginTime" prepend="AND">
           <![CDATA[T2.RECORD_TIME >= #BeginTime#]]>
         </isNotNull>
         <isNotNull property="EndTime" prepend="AND">
           <![CDATA[T2.RECORD_TIME <= #EndTime#]]>
         </isNotNull>
         <isNotNull property="ClassID" prepend="AND">
           <![CDATA[T1.RETURN_CLASS_ID = #ClassID#]]>
         </isNotNull>
         <isNotNull property="ShiftID" prepend="AND">
           <![CDATA[T1.RETURN_SHIFT_ID = #ShiftID#]]>
         </isNotNull>
       </dynamic>
       <![CDATA[
            AND T1.BILL_TYPE = 2
            group by T1.RETURN_DATE, T1.RETURN_CLASS_ID, T1.RETURN_SHIFT_ID , T2.MATERIAL_ID, T3.SAP_CODE
            ,t2.check_grade_code,case when t2.check_grade_code <> 1 then 1 else  nvl(T5.UFRANK,2) end
            ,nvl(to_char(t7.plan_date,'yyyy'),to_char(sysdate,'yyyy'))

        ) T1
          GROUP BY T1.IN_DATE, T1.IN_CLASS_ID, T1.IN_SHIFT_ID, T1.MATERIAL_ID, T1.SAP_CODE
          ,T1.check_grade_code,T1.dph_grade_code,year_batch
        ) T1
        LEFT JOIN SBM_MATERIAL T2 ON T1.MATERIAL_ID = T2.OBJID
        LEFT JOIN SSB_CLASS T3 ON T1.IN_CLASS_ID = T3.OBJID
            ]]>
       <isNotNull property="OrderString" prepend=" ">
         ORDER BY $OrderString$
       </isNotNull>
       <isNull property="OrderString" prepend=" ">
         ORDER BY T1.IN_DATE, T1.IN_SHIFT_ID, T1.IN_CLASS_ID, T2.MATERIAL_NAME
       </isNull>
     </select>
     <select id="GetUploadStorageInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
      select T.OBJID,CASE T.SUCCESS_FLAG WHEN 0 THEN '新建' WHEN 1 THEN '上传中' WHEN 2 THEN '上传成功' WHEN 3 THEN '上传失败' END SUCCESS_FLAG, 
      T.SHIFT_DATE,T2.SHIFT_NAME,T.DOC_DATE,T.POST_DATE,T.MATERIAL_ID,t1.material_name,T1.SAP_CODE,T.MES_QTY,T.QTY,
      T.REC_STOLOC,T.REC_BATCH,T.RECIEVER,T.HEAD_TXT,T.BATCH,
      T.OBJID||'|'||DOC_DATE||'|'||POST_DATE||'|'||T1.MATERIAL_NAME||'|'||T.QTY||'|'||T.REC_STOLOC||'|'||T.REC_BATCH||'|'||T.RECIEVER||'|'||T.HEAD_TXT||'|'||T.SUCCESS_FLAG||'|'||t.batch STORAGEINFO
      FROM PSM_MES_STORAGE_QTY T 
      LEFT JOIN SBM_MATERIAL T1 ON T1.OBJID = T.MATERIAL_ID
      LEFT JOIN SSB_SHIFT T2 ON T2.OBJID = T.SHIFT_ID
      WHERE T.DELETE_FLAG=0 AND T.MOV_TYPE='311'
      ]]>
       <dynamic prepend="AND">
         <isNotNull property="where.ShiftDate" prepend="AND">
           <![CDATA[T.SHIFT_DATE = #where.ShiftDate#]]>
         </isNotNull>
         <isNotNull property="where.ShiftID" prepend="AND">
           <![CDATA[T.SHIFT_ID = #where.ShiftID#]]>
         </isNotNull>
         <isNotNull property="where.ClassID" prepend="AND">
           <![CDATA[T.Class_ID = #where.ClassID#]]>
         </isNotNull>
         <isNotNull property="where.headID" prepend="AND">
           <![CDATA[ T.OBJID IN (SELECT DETAIL_ID FROM PSM_SAP_IN_RECORDS WHERE HEAD_ID = #where.headID#]]>
         </isNotNull>
       </dynamic>
       <dynamic prepend="ORDER BY"> 
         <![CDATA[T1.MATERIAL_NAME]]>
       </dynamic>
     </select>
     <select id="GetStorageOutInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
      select T.OBJID,CASE T.SUCCESS_FLAG WHEN 0 THEN '新建' WHEN 1 THEN '上传中' WHEN 2 THEN '上传成功' WHEN 3 THEN '上传失败' END SUCCESS_FLAG, 
      T.SHIFT_DATE,T2.SHIFT_NAME,T.DOC_DATE,T.POST_DATE,T.MATERIAL_ID,t1.material_name,T1.SAP_CODE,T.MES_QTY,T.QTY,
      T.REC_STOLOC,T.REC_BATCH,T.RECIEVER,T.HEAD_TXT,T.RETURN_MSG,
      T.OBJID||'|'||DOC_DATE||'|'||POST_DATE||'|'||T1.MATERIAL_NAME||'|'||T.QTY||'|'||T.REC_STOLOC||'|'||T.REC_BATCH||'|'||T.RECIEVER||'|'||T.HEAD_TXT||'|'||T.SUCCESS_FLAG STORAGEINFO
      FROM PSM_MES_STORAGE_QTY T 
      LEFT JOIN SBM_MATERIAL T1 ON T1.OBJID = T.MATERIAL_ID
      LEFT JOIN SSB_SHIFT T2 ON T2.OBJID = T.SHIFT_ID
      WHERE T.DELETE_FLAG=0 AND T.MOV_TYPE='312'
      ]]>
       <dynamic prepend="AND">
         <isNotNull property="where.ShiftDate" prepend="AND">
           <![CDATA[T.SHIFT_DATE = #where.ShiftDate#]]>
         </isNotNull>
         <isNotNull property="where.ShiftID" prepend="AND">
           <![CDATA[T.SHIFT_ID = #where.ShiftID#]]>
         </isNotNull>
       </dynamic>
       <dynamic prepend="ORDER BY">
         <![CDATA[T1.MATERIAL_NAME]]>
       </dynamic>
     </select>
     <select id="GetStoreInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
       SELECT SAP_CODE FROM PSB_STORE_PLACE T 
       WHERE T.DELETE_FLAG=0 
       GROUP BY SAP_CODE
       ]]>
     </select>
     <select id="GetTotalAmount" parameterClass="map" resultClass="Row">
       <![CDATA[
       select sum(t.mes_qty) mes_qty,sum(t.qty) qty from psm_mes_storage_qty t
       where T.DELETE_FLAG=0 and t.mov_type=311
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="ShiftDate" prepend="AND">
           <![CDATA[t.shift_date=#ShiftDate#]]>
         </isNotNull>
         <isNotNull property="ShiftID" prepend="AND">
           <![CDATA[t.shift_id=#ShiftID#]]>
         </isNotNull>
         <isNotNull property="ClassID" prepend="AND">
           <![CDATA[t.class_id=#ClassID#]]>
         </isNotNull>
       </dynamic>
     </select>
     <select id="GetSuccessAmount" parameterClass="map" resultClass="Row">
       <![CDATA[
       select sum(t.mes_qty) mes_qty,sum(case success_flag when 2 then qty else 0 end) qty from psm_mes_storage_qty t
       where T.DELETE_FLAG=0 and t.mov_type=311
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="ShiftDate" prepend="AND">
           <![CDATA[t.shift_date=#ShiftDate#]]>
         </isNotNull>
         <isNotNull property="ShiftID" prepend="AND">
           <![CDATA[t.shift_id=#ShiftID#]]>
         </isNotNull>
         <isNotNull property="ClassID" prepend="AND">
           <![CDATA[t.class_id=#ClassID#]]>
         </isNotNull>
       </dynamic>
     </select>
     <select id="GetTotalOutAmount" parameterClass="map" resultClass="Row">
       <![CDATA[
       select sum(t.mes_qty) mes_qty,sum(t.qty) qty from psm_mes_storage_qty t
       where T.DELETE_FLAG=0 and t.mov_type=312
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="ShiftDate" prepend="AND">
           <![CDATA[t.shift_date=#ShiftDate#]]>
         </isNotNull>
         <isNotNull property="ShiftID" prepend="AND">
           <![CDATA[t.shift_id=#ShiftID#]]>
         </isNotNull>
       </dynamic>
     </select>
     <select id="GetSuccessOutAmount" parameterClass="map" resultClass="Row">
       <![CDATA[
       select sum(t.mes_qty) mes_qty,sum(case success_flag when 2 then qty else 0 end) qty from psm_mes_storage_qty t
       where T.DELETE_FLAG=0 and t.mov_type=312
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="ShiftDate" prepend="AND">
           <![CDATA[t.shift_date=#ShiftDate#]]>
         </isNotNull>
         <isNotNull property="ShiftID" prepend="AND">
           <![CDATA[t.shift_id=#ShiftID#]]>
         </isNotNull>
       </dynamic>
     </select>

     <select id="GetWMSRecordInfo" parameterClass="map" resultClass="row">
       <![CDATA[
 SELECT distinct A.* ,B.USER_NAME ,C.MATERIAL_CODE ,'1111' MES_LOT_UP,'DZ01' FLAG
            ,CASE A.TEST_FLAG WHEN '1' THEN '实验胎' ELSE '非实验胎' END TESTFLAG
            ,CASE A.RETURN_FLAG WHEN '1' THEN '复检返修' ELSE '正常' END RETURNFLAG
            ,CASE D.LOCK_FLAG WHEN 1 THEN '锁定' ELSE '正常' END LOCKFLAG
            ,CASE A.ATTRIBUTE3 WHEN '1' THEN '入库' ELSE '未入库' END INSTORE,case e.is_jun when 1 then '是' else '否' end ISJUN
            ,case when(f.ufmtotalrank = 1 or f.ufmtotalrank =2 or f.ufmtotalrank =3) then '合格' when nvl(e.is_jun,0) <> 1 then '' else '不合格' end UFMRANK
      FROM WMS_UPLOAD_RECORD A
      LEFT JOIN SSB_USER B ON A.RECORD_USER_ID = B.OBJID
      LEFT JOIN SBM_MATERIAL C ON A.ITEM_NUMBER = C.SAP_CODE 
      LEFT JOIN sbm_lock_record D ON D.BARCODE=A.TYRE_NO
      left join fqb_quality_standard e on e.material_id = c.objid and a.delete_flag = 0
      left join sbe_uniformity f on f.tyreno=a.tyre_no
      ]]>
       <dynamic prepend="WHERE">
         <isNotNull property="where.BeginTime" prepend="AND">
           <![CDATA[A.upload_time >= to_date(#where.BeginTime#,'yyyy/mm/dd hh24:mi:ss')]]>
         </isNotNull>
         <isNotNull property="where.EndTime" prepend="AND">
           <![CDATA[A.upload_time < to_date(#where.EndTime#,'yyyy/mm/dd hh24:mi:ss')]]>
         </isNotNull>
         <isNotNull property="where.TYRE_NO" prepend="AND">
           <![CDATA[A.TYRE_NO = #where.TYRE_NO#]]>
         </isNotNull>
         <isNotNull property="where.DELETE_FLAG" prepend="AND">
           <![CDATA[A.DELETE_FLAG = #where.DELETE_FLAG#]]>
         </isNotNull>
         <isNotNull property="where.isstore" prepend="AND">
           <![CDATA[A.ATTRIBUTE3 = #where.isstore#]]>
         </isNotNull>
         <isNotNull property="where.Notisstore" prepend="AND">
           <![CDATA[nvl(A.ATTRIBUTE3,0) <> 1]]>
         </isNotNull>
         <isNotNull property="where.islock" prepend="AND">
           <![CDATA[D.LOCK_FLAG = #where.islock#]]>
         </isNotNull>
         <isNotNull property="where.notlock" prepend="AND">
           <![CDATA[nvl(D.LOCK_FLAG,0) <> 1]]>
         </isNotNull>
         <isNotNull property="where.shiyan" prepend="AND">
           <![CDATA[A.TEST_FLAG = #where.shiyan#]]>
         </isNotNull>
         <isNotNull property="where.notshiyan" prepend="AND">
           <![CDATA[nvl(A.TEST_FLAG,0) <> 1]]>
         </isNotNull>
         <isNotNull property="where.sap" prepend="AND">
           <![CDATA[ A.ITEM_NUMBER like '%'|| #where.sap# ||'%']]>
         </isNotNull>
       </dynamic>
       <isNull property="OrderString" prepend=" ">
         ORDER BY A.RECORD_TIME
       </isNull>
     </select>
     
  </statements>
</sqlMap>
