<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Storage.Mapper.BusinessMapper.PsmOutStockSummary"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM PSM_OUT_STOCK_SUMMARY ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.FactoryId" prepend="AND">
          <![CDATA[FACTORY_ID = #where.FactoryId#]]>
        </isNotNull>
        <isNotNull property="where.SeqIndex" prepend="AND">
          <![CDATA[SEQ_INDEX = #where.SeqIndex#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
        <isNotNull property="where.BillId" prepend="AND">
          <![CDATA[BILL_ID = #where.BillId#]]>
        </isNotNull>
        <isNotNull property="where.MainId" prepend="AND">
          <![CDATA[MAIN_ID = #where.MainId#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.StoreId" prepend="AND">
          <![CDATA[STORE_ID = #where.StoreId#]]>
        </isNotNull>
        <isNotNull property="where.StorePlaceId" prepend="AND">
          <![CDATA[STORE_PLACE_ID = #where.StorePlaceId#]]>
        </isNotNull>
        <isNotNull property="where.CheckGradeCode" prepend="AND">
          <![CDATA[CHECK_GRADE_CODE = #where.CheckGradeCode#]]>
        </isNotNull>
        <isNotNull property="where.OutAmount" prepend="AND">
          <![CDATA[OUT_AMOUNT = #where.OutAmount#]]>
        </isNotNull>
        <isNotNull property="where.SummaryState" prepend="AND">
          <![CDATA[SUMMARY_STATE = #where.SummaryState#]]>
        </isNotNull>
        <isNotNull property="where.UpdateTime" prepend="AND">
          <![CDATA[UPDATE_TIME = #where.UpdateTime#]]>
        </isNotNull>
        <isNotNull property="where.UpdateUserId" prepend="AND">
          <![CDATA[UPDATE_USER_ID = #where.UpdateUserId#]]>
        </isNotNull>
        <isNotNull property="where.AffirmTime" prepend="AND">
          <![CDATA[AFFIRM_TIME = #where.AffirmTime#]]>
        </isNotNull>
        <isNotNull property="where.AffirmUserId" prepend="AND">
          <![CDATA[AFFIRM_USER_ID = #where.AffirmUserId#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>
     
     <!--出库月报表-->
    <select id="getOutStorageMonthReport" parameterClass="map" resultClass="Row">
     <![CDATA[
        SELECT SUM(T1.OUT_AMOUNT) OUTQTY,
       TO_CHAR(T3.Update_Time,'YYYY-MM-DD') AS DATEVALUE,
        TO_CHAR(TO_DATE(TO_CHAR(T3.Update_Time,'YYYY-MM-DD'),'YYYY-MM-DD'),'MM') AS MONTH,
        TO_CHAR(TO_DATE(TO_CHAR(T3.Update_Time,'YYYY-MM-DD'),'YYYY-MM-DD'),'DD') AS DAY,
         T8.USER_NAME 
        , T6.STORE_NAME
         , CASE T1.CHECK_GRADE_CODE WHEN 1 THEN '合格品' WHEN 2 THEN '次品' WHEN 3 THEN '废品' WHEN 4 THEN '特废品' WHEN 9 THEN '试验胎' ELSE '无品级' END CHECK_GRADE_NAME 
        , T4.CUSTOME_NAME CUSTOMER_NAME
        , T5.MATERIAL_NAME 
        FROM PSM_OUT_STOCK_SUMMARY T1
        LEFT JOIN SSB_USER T2 ON T1.AFFIRM_USER_ID = T2.OBJID
        LEFT JOIN PSM_OUT_STOCK_BILL T3 ON T1.BILL_ID = T3.OBJID
        LEFT JOIN PSB_CUSTOMER T4 ON T3.CUSTOMER_OBJID = T4.OBJID
        LEFT JOIN SBM_MATERIAL T5 ON T1.MATERIAL_ID = T5.OBJID
        LEFT JOIN SSB_USER T8 ON T1.AFFIRM_USER_ID = T8.OBJID        
        JOIN PSB_STORE  T6 ON T1.STORE_ID=T6.OBJID    
        WHERE   T3.DELETE_FLAG=0
     ]]>
      <isNotNull property="where.DeleteFlag" prepend="AND">
        <![CDATA[T1.DELETE_FLAG = #where.DeleteFlag#]]>
      </isNotNull>
      <isNotNull property="where.OUTDATE" prepend="AND">
        <![CDATA[TO_CHAR(T3.AFFIRM_TIME,'YYYY-MM')= #where.OUTDATE#]]>
      </isNotNull>
      <isNotNull property="where.STORE_NAME" prepend="AND">
        <![CDATA[T6.STORE_NAME = #where.STORE_NAME#]]>
      </isNotNull>
      
      <isNotNull >
        <![CDATA[
         GROUP BY  T3.Update_Time, T5.MATERIAL_NAME,T6.STORE_NAME,T4.CUSTOME_NAME,T8.USER_NAME ,T1.CHECK_GRADE_CODE
        ORDER BY  T5.MATERIAL_NAME         
        ]]>
      </isNotNull>
    </select>

     <!--调拨月报表-->
     <select id="getTransferMonthReport" parameterClass="map" resultClass="Row">
       <![CDATA[
        SELECT SUM(T1.Transfer_Amount) OUTQTY,
       TO_CHAR(T3.Update_Time,'YYYY-MM-DD') AS DATEVALUE,
        TO_CHAR(TO_DATE(TO_CHAR(T3.Update_Time,'YYYY-MM-DD'),'YYYY-MM-DD'),'MM') AS MONTH,
        TO_CHAR(TO_DATE(TO_CHAR(T3.Update_Time,'YYYY-MM-DD'),'YYYY-MM-DD'),'DD') AS DAY,
         T8.USER_NAME 
        , T6.STORE_NAME
         , CASE T1.CHECK_GRADE_CODE WHEN 1 THEN '合格品' WHEN 2 THEN '次品' WHEN 3 THEN '废品' WHEN 4 THEN '特废品' WHEN 9 THEN '试验胎' ELSE '无品级' END CHECK_GRADE_NAME 
        , T3.Stor_Loc_To CUSTOMER_NAME
        , T5.MATERIAL_NAME 
        FROM psm_transfer_summary T1
        LEFT JOIN SSB_USER T2 ON T1.AFFIRM_USER_ID = T2.OBJID
        LEFT JOIN psm_transfer_bill T3 ON T1.BILL_ID = T3.OBJID
        LEFT JOIN SBM_MATERIAL T5 ON T1.MATERIAL_ID = T5.OBJID
        LEFT JOIN SSB_USER T8 ON T1.AFFIRM_USER_ID = T8.OBJID        
        JOIN PSB_STORE  T6 ON T1.STORE_ID=T6.OBJID    
        WHERE   T3.DELETE_FLAG=0
     ]]>
       <isNotNull property="where.DeleteFlag" prepend="AND">
         <![CDATA[T1.DELETE_FLAG = #where.DeleteFlag#]]>
       </isNotNull>
       <isNotNull property="where.OUTDATE" prepend="AND">
         <![CDATA[TO_CHAR(T3.Update_Time,'YYYY-MM')= #where.OUTDATE#]]>
       </isNotNull>
       <isNotNull property="where.STORE_NAME" prepend="AND">
         <![CDATA[T6.STORE_NAME = #where.STORE_NAME#]]>
       </isNotNull>

       <isNotNull >
         <![CDATA[
         GROUP BY  T3.Update_Time, T5.MATERIAL_NAME,T6.STORE_NAME,T3.Stor_Loc_To,T8.USER_NAME ,T1.CHECK_GRADE_CODE
        ORDER BY  T5.MATERIAL_NAME         
        ]]>
       </isNotNull>
     </select>
     <!--更新记录-->
     <update id="UpdateAmountByObjId" parameterClass="map">
       UPDATE PSM_OUT_STOCK_SUMMARY
       SET OUT_AMOUNT = OUT_AMOUNT + #update.UpdateAmount#
       WHERE OBJID = #ObjId#
     </update>
     <!--获取出库汇总总数量-->
     <select id="GetSummaryAmount" parameterClass="map">
       SELECT SUM(T.OUT_AMOUNT)  FROM PSM_OUT_STOCK_SUMMARY T
       WHERE T.BILL_ID = #BillId#
     </select>

   </statements>
</sqlMap>
