<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Quality.Mapper.BusinessMapper.CqcQcrecord"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM CQC_QCRECORD ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.Tyreid" prepend="AND">
          <![CDATA[TYREID = #where.Tyreid#]]>
        </isNotNull>
        <isNotNull property="where.Gradeid" prepend="AND">
          <![CDATA[GRADEID = #where.Gradeid#]]>
        </isNotNull>
        <isNotNull property="where.Seqid" prepend="AND">
          <![CDATA[SEQID = #where.Seqid#]]>
        </isNotNull>
        <isNotNull property="where.NewFlag" prepend="AND">
          <![CDATA[NEW_FLAG = #where.NewFlag#]]>
        </isNotNull>
        <isNotNull property="where.FactoryId" prepend="AND">
          <![CDATA[FACTORY_ID = #where.FactoryId#]]>
        </isNotNull>
        <isNotNull property="where.BaupFlag" prepend="AND">
          <![CDATA[BAUP_FLAG = #where.BaupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BaupTime" prepend="AND">
          <![CDATA[BAUP_TIME = #where.BaupTime#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.StateFlag" prepend="AND">
          <![CDATA[STATE_FLAG = #where.StateFlag#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.EquipId" prepend="AND">
          <![CDATA[EQUIP_ID = #where.EquipId#]]>
        </isNotNull>
        <isNotNull property="where.ShiftId" prepend="AND">
          <![CDATA[SHIFT_ID = #where.ShiftId#]]>
        </isNotNull>
        <isNotNull property="where.ClassId" prepend="AND">
          <![CDATA[CLASS_ID = #where.ClassId#]]>
        </isNotNull>
        <isNotNull property="where.DefectId1" prepend="AND">
          <![CDATA[DEFECT_ID1 = #where.DefectId1#]]>
        </isNotNull>
        <isNotNull property="where.DefectId2" prepend="AND">
          <![CDATA[DEFECT_ID2 = #where.DefectId2#]]>
        </isNotNull>
        <isNotNull property="where.DefectId3" prepend="AND">
          <![CDATA[DEFECT_ID3 = #where.DefectId3#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.SeqIndex" prepend="AND">
          <![CDATA[SEQ_INDEX = #where.SeqIndex#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>

  <select id="ProcQmtGetTyreFCheckValidateInfo1" parameterClass="map" resultClass="Row">

    <![CDATA[select kl.tyreid ,kl.gradeid, kl.defect_id2 from cqc_qcrecord kl ]]>
    <dynamic prepend="WHERE">
      <isNotNull property="TyreNoOrGreenTyreNo" prepend="AND" >
        <![CDATA[ kl.tyreid =#TyreNoOrGreenTyreNo#]]>
      </isNotNull>
    </dynamic>
  </select>

     <select id="GetMoldingEquip" parameterClass="map" resultClass="Row">
       <![CDATA[
select EQUIP_NAME,OBJID from sbe_equip where major_type_id = 41 and delete_flag = 0 order by equip_code
       ]]>
     </select>

     <select id="GetSbeStopRecordInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
select distinct B.EQUIP_NAME,C.MATERIAL_NAME,CASE STOP_TYPE WHEN 1 THEN '动平衡三条' WHEN 2 THEN '均匀性三条' WHEN 3 THEN 'X光三条' END STOP_TYPE,
 A.RECORD_TIME,CASE UNLOCK_TYPE WHEN 1 THEN '自动解锁' WHEN 2 THEN '手动解锁' END UNLOCK_TYPE,UNLOCK_TIME,D.USER_NAME,a.barcode,f.defectname
  from sbe_stoprecord a
left join sbe_equip b on a.equip_id = b.objid
LEFT JOIN SBM_MATERIAL C ON C.OBJID = A.MATER_ID
LEFT JOIN SSB_USER D ON D.OBJID = A.UNLOCK_USERID
left join fqx_xcheck_detail e on e.tyrdid = substr(a.barcode,0,10)
left join fqd_defect_info f on f.objid = e.defectid
          ]]>
       <dynamic prepend="WHERE">
         <isNotNull property="where.BeginTime" prepend="AND">
           <![CDATA[A.RECORD_TIME >= #where.BeginTime#]]>
         </isNotNull>
         <isNotNull property="where.EndTime" prepend="AND">
           <![CDATA[A.RECORD_TIME < #where.EndTime#]]>
         </isNotNull>
         <isNotNull property="where.EquipCode" prepend="AND">
           <![CDATA[A.equip_id = #where.EquipCode#]]>
         </isNotNull>
       </dynamic>
       <![CDATA[order by a.RECORD_TIME]]>
     </select>

     <update id="UpdateExpInfo" parameterClass="map" >
       <![CDATA[
UPDATE wms_upload_record SET TEST_FLAG = #testflag#,UPLOAD_FLAG = 0,RETURNSTATE = NULL where tyre_no = #tyreNo#
       ]]>
     </update>
     <update id="UpdateBpmTestFlag" parameterClass="map" >
       <![CDATA[
update bpm_production set  test_flag = #testflag# where  green_tyre_no = #tyreNo# and delete_flag = 0
       ]]>
     </update>
     
     <select id="GetSbeAlvType" parameterClass="map" resultClass="Row">
       <![CDATA[SELECT A.*,B.MATERIAL_NAME,C.USER_NAME  FROM SBE_ALVTYPE A
LEFT JOIN SBM_MATERIAL B ON B.SAP_CODE = A.SAP_CODE
LEFT JOIN SSB_USER C ON C.OBJID = A.USERID
          ]]>
       <dynamic prepend="WHERE">
         <isNotNull property="where.TYPE" prepend="AND">
           <![CDATA[A.TYPE_NAME = #where.TYPE#]]>
         </isNotNull>
         <isNotNull property="where.SAP" prepend="AND">
           <![CDATA[B.MATERIAL_NAME like '%'|| #where.SAP# || '%']]>
         </isNotNull>
       </dynamic>
       <![CDATA[order by a.RECORD_TIME]]>
     </select>

     <select id="GetALvInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
       SELECT * FROM SBE_ALVTYPE where sap_code = #SAP#
          ]]>
     </select>

     <insert id="InsertSbeALv" parameterClass="map" resultClass="Row">
       <![CDATA[
       insert into SBE_ALVTYPE values(#SAP#,#type#,#userid#,sysdate)
          ]]>
     </insert>
     
     <update id="UpdateSbeALv" parameterClass="map" >
       <![CDATA[
       update SBE_ALVTYPE set type_name = #type#,userid = #userid#,record_time = sysdate where sap_code = #SAP#
          ]]>
     </update>
     <delete id="DelSbeALv" parameterClass="map" >
       <![CDATA[
       delete from SBE_ALVTYPE where sap_code=  #SAP#
          ]]>
     </delete>

     <select id="GetSbeAlvSummary" parameterClass="map" resultClass="Row">
       <![CDATA[SELECT Y.*,ROUND(A/ALLCOUNT*100,2)||'%' ALV  FROM (
SELECT X.MATERIAL_NAME,X.TYPE_NAME,SUM(CASE WHEN GRADE = 'A级品' THEN 1 ELSE 0 END) A,SUM(CASE WHEN GRADE = 'B级品' THEN 1 ELSE 0 END) B
,SUM(CASE WHEN GRADE = '次品' THEN 1 ELSE 0 END) C,SUM(CASE WHEN GRADE = '废品' THEN 1 ELSE 0 END) F,
SUM(CASE WHEN GRADE = 'A级品' THEN 1 WHEN GRADE = 'B级品' THEN 1 ELSE 0 END) HEGE,COUNT(X.tyre_no) ALLCOUNT FROM (
select c.material_name,d.type_name,a.tyre_no,
case a.grade when 'A+1' THEN 'A级品' when 'A+2' THEN 'A级品' when 'A0' THEN 'B级品' when 'C' THEN '次品' when 'F' THEN '废品' ELSE  a.grade END GRADE
 from wms_upload_record a
left join cpp_curing_production b on b.tyre_no = a.tyre_no and b.delete_flag = 0
left join sbm_material c on c.objid = b.material_id
left join sbe_alvtype d on d.sap_code = c.sap_code
where a.upload_time>= #where.begintime# and a.upload_time <= #where.endtime# and a.delete_flag = 0
and( a.reflag = 1 or a.attribute3 <> 1) 
          ]]>
       <isNotNull property="where.TYPE" prepend="AND">
         <![CDATA[D.TYPE_NAME = #where.TYPE#]]>
       </isNotNull>
       <isNotNull property="where.MATER" prepend="AND">
         <![CDATA[C.MATERIAL_NAME like '%'|| #where.MATER# || '%']]>
       </isNotNull>
       <isNotNull property="where.RETURN" prepend="AND">
         <![CDATA[A.ATTRIBUTE3 $where.RETURN$]]>
       </isNotNull>
       <![CDATA[
 ) X
GROUP BY X.MATERIAL_NAME,X.TYPE_NAME ) Y]]>
     </select>

   </statements>
</sqlMap>
