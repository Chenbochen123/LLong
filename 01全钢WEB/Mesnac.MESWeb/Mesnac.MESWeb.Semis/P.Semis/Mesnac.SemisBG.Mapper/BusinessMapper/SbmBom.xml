<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.SemisBG.Mapper.BusinessMapper.SbmBom"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM SBM_BOM ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.LastmodifyDate" prepend="AND">
          <![CDATA[LASTMODIFY_DATE = #where.LastmodifyDate#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.UnitId" prepend="AND">
          <![CDATA[UNIT_ID = #where.UnitId#]]>
        </isNotNull>
        <isNotNull property="where.GroupNum" prepend="AND">
          <![CDATA[GROUP_NUM = #where.GroupNum#]]>
        </isNotNull>
        <isNotNull property="where.GreentyreVersion" prepend="AND">
          <![CDATA[GREENTYRE_VERSION = #where.GreentyreVersion#]]>
        </isNotNull>
        <isNotNull property="where.BomType" prepend="AND">
          <![CDATA[BOM_TYPE = #where.BomType#]]>
        </isNotNull>
        <isNotNull property="where.BomFactroy" prepend="AND">
          <![CDATA[BOM_FACTROY = #where.BomFactroy#]]>
        </isNotNull>
        <isNotNull property="where.BomVersion" prepend="AND">
          <![CDATA[BOM_VERSION = #where.BomVersion#]]>
        </isNotNull>
        <isNotNull property="where.EffectDate" prepend="AND">
          <![CDATA[EFFECT_DATE = #where.EffectDate#]]>
        </isNotNull>
        <isNotNull property="where.LoseEffectDate" prepend="AND">
          <![CDATA[LOSE_EFFECT_DATE = #where.LoseEffectDate#]]>
        </isNotNull>
        <isNotNull property="where.PdmCode" prepend="AND">
          <![CDATA[PDM_CODE = #where.PdmCode#]]>
        </isNotNull>
        <isNotNull property="where.DropFlag" prepend="AND">
          <![CDATA[DROP_FLAG = #where.DropFlag#]]>
        </isNotNull>
        <isNotNull property="where.GreentyreMaterialId" prepend="AND">
          <![CDATA[GREENTYRE_MATERIAL_ID = #where.GreentyreMaterialId#]]>
        </isNotNull>
        <isNotNull property="where.MaterialParentId" prepend="AND">
          <![CDATA[MATERIAL_PARENT_ID = #where.MaterialParentId#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.GroupUnitNum" prepend="AND">
          <![CDATA[GROUP_UNIT_NUM = #where.GroupUnitNum#]]>
        </isNotNull>
        <isNotNull property="where.Historyedition" prepend="AND">
          <![CDATA[HISTORYEDITION = #where.Historyedition#]]>
        </isNotNull>
        <isNotNull property="where.ExpiredDate" prepend="AND">
          <![CDATA[EXPIRED_DATE = #where.ExpiredDate#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>

     <!--新加入全钢后 做成SQL START-->
     <!--查询要复制的物料在半钢是否存在-->
     <select id="GetMaterialInfoBG" parameterClass="map" resultClass="Row">
       <![CDATA[
       SELECT * FROM SBM_MATERIAL WHERE SAP_CODE = #SapCode# AND DELETE_FLAG = 0
       ]]>
     </select>
     <!--半钢中该BOM更新删除标志为【删除】-->
     <update id="UpdateSbmBomDataBG" parameterClass="map" >
       <![CDATA[
        UPDATE SBM_BOM_DATA A SET A.DELETE_FLAG = 1,A.Backup_Flag = #UserId# ,A.BACKUP_TIME = #UpdateTime#
        WHERE A.MATERIAL_PARENT_ID IN (SELECT OBJID FROM SBM_MATERIAL WHERE SAP_CODE = #SapCode# AND DELETE_FLAG = 0)
        AND A.BOM_TYPE = #BomType#
        AND A.BOM_FACTROY = #BomFactroy#
        AND A.BOM_VERSION = #BomVersion#
        AND A.GREENTYRE_VERSION = #GeeenTyreVersion#
      ]]>
     </update>
     <!--半钢中该BOM更新删除标志为【删除】-->
     <update id="UpdateSbmBomBG" parameterClass="map" >
       <![CDATA[
        UPDATE SBM_BOM A SET A.DELETE_FLAG = 1,A.Backup_Flag = #UserId# ,A.BACKUP_TIME = #UpdateTime#
        WHERE A.MATERIAL_PARENT_ID IN (SELECT OBJID FROM SBM_MATERIAL WHERE SAP_CODE = #SapCode# AND DELETE_FLAG = 0)
        AND A.BOM_TYPE = #BomType#
        AND A.BOM_FACTROY = #BomFactroy#
        AND A.BOM_VERSION = #BomVersion#
        AND A.GREENTYRE_VERSION = #GeeenTyreVersion#
      ]]>
     </update>

     <!--新加入全钢后 做成SQL  END -->

     <select id="GetSemisProductInfo3" parameterClass="map" resultClass="Row">
       <![CDATA[
       SELECT T5.UNIT_NAME,T.CARD_NO BARCODE,T.EQUIP_ID,T.MATERIAL_ID,T1.MATERIAL_NAME,T1.SAP_CODE,T1.MATERIAL_CODE,T1.MINOR_TYPE_ID MATERIAL_TYPE_ID,
       T2.MINOR_TYPE_NAME MATERIAL_TYPE_NAME,T4.USER_NAME OPER_NAME,T3.EQUIP_NAME,T.QTY SET_QUANTITY,T.LEFT_QTY LEFT_QUANTITY,T.END_TIME PRODUCE_TIME,
       T.END_TIME VALID_DATE,T7.TOOLING_RFID_BARCODE SHELF_NO,T9.OBJID STORE_PLACE_ID,T9.STORE_PLACE_NAME ,T.DUMMY2 ,T.END_TIME RECORD_TIME,T10.MIN_TIME,T10.VALID_TIME
       ,T.DUMMY3,T.DUMMY4
        FROM HPP_SEMIS_PRODUCTION T
        LEFT JOIN SBM_MATERIAL T1 ON T1.OBJID  =T.MATERIAL_ID
        LEFT JOIN SBM_MATERIAL_MINOR_TYPE T2 ON T2.OBJID = T1.MINOR_TYPE_ID
        LEFT JOIN SBE_EQUIP T3 ON T3.OBJID = T.EQUIP_ID
        LEFT JOIN SSB_USER T4 ON T4.OBJID = T.RECORD_USER_ID
        LEFT JOIN SSB_UNIT T5 ON T5.OBJID=T.UNIT_ID
        LEFT JOIN HSM_TOOLING_LOAD T6 ON T6.CARD_NO = T.CARD_NO
        LEFT JOIN HSM_TOOLING T7 ON T7.OBJID = T6.TOOLING_ID
        LEFT JOIN HPP_STORAGE_DETAIL T8 ON T8.CARD_NO = T.CARD_NO 
        LEFT JOIN HPP_STORE_PLACE T9 ON T9.OBJID = T8.STORE_PLACE_ID AND T9.POSITION_TYPE='1'
        LEFT JOIN SBM_MATERIAL_INFO T10 ON T10.MATERIAL_ID = T1.OBJID 
       WHERE T.DELETE_FLAG=0
       ]]>
       <isNotNull property="cardNo" prepend="AND">
         <![CDATA[T.CARD_NO=#cardNo#]]>
       </isNotNull>
       <isNotNull property="RFIDNo" prepend="AND">
         <![CDATA[T7.TOOLING_RFID_BARCODE=#RFIDNo#]]>
       </isNotNull>
     </select>

     <select id="GetSemisInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
        SELECT T2.TOOLING_RFID_BARCODE,T.* FROM HSM_TOOLING_LOAD T
        LEFT JOIN HSM_TOOLING T2 ON T.TOOLING_ID=T2.OBJID
        WHERE 1=1 
        ]]>
       <isNotNull property="CarNo" prepend="AND">
         <![CDATA[T2.TOOLING_RFID_BARCODE=#CarNo#]]>
       </isNotNull>
     </select>

     <select id="GetBGMaterialProductInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
         SELECT D.UNIT_NAME,C.MIN_TIME,C.VALID_TIME,B.SAP_CODE,B.MATERIAL_CODE,B.MATERIAL_NAME
         , A.* FROM HPP_SEMIS_PRODUCTION A 
         LEFT JOIN SBM_MATERIAL B ON A.MATERIAL_ID = B.OBJID
         LEFT JOIN SBM_MATERIAL_INFO C ON A.MATERIAL_ID = C.MATERIAL_ID
         LEFT JOIN SSB_UNIT D ON A.UNIT_ID = D.OBJID
      ]]>
       <dynamic prepend="WHERE">
         <isNotNull property="Barcode" prepend="AND">
           <![CDATA[A.CARD_NO = #Barcode#]]>
         </isNotNull>
       </dynamic>
     </select>

     <select id="GetXRXCTime" parameterClass="map" resultClass="Row">
      <![CDATA[
        select min(r3.end_time) as record_time from hpp_storage_detail r1 
        left join sbm_material_info r2 on r2.material_id = r1.dummy2 and r2.delete_flag = 0
        left join hpp_semis_production r3 on r1.card_no = r3.card_no and r3.delete_flag=0
        left join hpp_store_place r4 on r4.objid = r1.store_place_id 
        where r1.store_place_id<>0 and r1.dummy1=0 and r4.position_type='0' 
        and to_date(to_char(r3.end_time+r2.valid_time/24,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') > sysdate 
        and r1.dummy2=#materialId#
        ]]>
    </select>

     <select id="GetFirstCard" parameterClass="map" resultClass="Row">
       <![CDATA[
     select * from ( select t.card_No,t2.store_place_name||t3.store_place_sub_name as store_place_name,t1.end_time from hpp_storage_detail t
      left join hpp_semis_production t1 on t1.card_no = t.card_no and t1.delete_flag=0
      left join hpp_store_place t2 on t2.objid = t.store_place_id 
     left join hpp_store_place_sub t3 on t3.objid = t.sub_store_place_id
     left join sbm_material_info t4 on t1.material_id = t4.material_id and t4.delete_flag = 0
      where t.delete_flag=0  and t.dummy1 in(0,1,4) and t2.position_type='0' 
      and to_date(to_char(t1.end_time+t4.valid_time/24,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') > sysdate 
      ]]>
       <dynamic prepend="AND">
         <isNotNull property="MaterialId" prepend="AND">
           <![CDATA[
          t1.material_id=#MaterialId#
          ]]>
         </isNotNull>
       </dynamic>
       <![CDATA[order by t1.end_time) where rownum<=1 ]]>
     </select>

     <select id="GetSemisStoreInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
            SELECT DISTINCT(B1.OBJID),B1.STORE_NAME FROM HPP_STORE B1
              LEFT JOIN  HPP_STORE_PLACE B2 ON B2.STORE_ID = B1.OBJID  WHERE B2.POSITION_TYPE=0  and b1.delete_flag=0   ORDER BY  B1.STORE_NAME ASC
       ]]>
     </select>

     <select id="SemisStorePlaceInfo1" parameterClass="map" resultClass="Row">
       <![CDATA[
         SELECT K.OBJID ,K.STORE_PLACE_NAME FROM HPP_STORE_PLACE K WHERE K.POSITION_TYPE =0 AND K.DELETE_FLAG = 0 AND K.STORE_ID=#StoreId# ORDER BY STORE_PLACE_NAME
         ]]>
     </select>

     <select id="SemisUsbStorePlaceInfo1" parameterClass="map" resultClass="Row">
       <![CDATA[SELECT OBJID,STORE_PLACE_SUB_NAME FROM HPP_STORE_PLACE_SUB  WHERE STORE_PLACE_ID =#StorePlaceId#]]>
     </select>

     <!--获取WMS所需轮胎信息-->
     <select id="GetTyreNoWMSInfo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
            select a.tyre_no,a.green_tyre_no,nvl(a.end_time,a.begin_time) end_time,b.material_code,b.sap_code
                  ,case nvl(e.objid,0) when 22 then 1 else 0 end AS testFlag
                  ,nvl(to_char(i.plan_date,'yyyy'),to_char(sysdate,'yyyy')) batchCuring
                  ,to_char(i.plan_date, 'WWYY') weekYear
                  ,f.final_check_grade
                  ,nvl(g.pt_id,h.PT_TYPE_ID) pt_id
                  ,case when f.final_check_grade <> 1 then 1
                        when nvl(g.pt_id,h.PT_TYPE_ID) =1 and nvl(nullif(g.UFRANK,0),1) <=7 then 1 
                        else nvl(nullif(g.UFRANK,0),1) end dph_grade_code,J.LOT_NUMBER             
            from cpp_curing_production a
            left join sbm_material b on a.material_id = b.objid and b.delete_flag = 0
            left join cpp_curing_plan_detail c on a.plan_detail_id = c.objid
            left join sbm_bom d on c.bom_id = d.objid
            left join sbm_bom_type e on d.bom_type = e.objid
            left join spp_tyre_state f on a.tyre_no = f.tyre_no and f.delete_flag = 0
            left join fqb_balance_info g on a.tyre_no = g.tyre_id and g.delete_flag = 0
            left join fqf_ptstandard_detail h on b.objid = h.material_id
            left join cpp_curing_plan i on a.plan_id = i.objid and i.delete_flag =0
            left join wms_upload_record J ON J.TYRE_NO = A.TYRE_NO
            where a.delete_flag = 0
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="TyreNo" prepend="AND">
           <![CDATA[a.tyre_no = #TyreNo#]]>
         </isNotNull>
       </dynamic>
     </select>

     <!--获取WMS所需轮胎信息-->
     <select id="GetWMSInfoByTyreNo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
            select * from WMS_UPLOAD_RECORD where delete_flag = 0
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="TyreNo" prepend="AND">
           <![CDATA[tyre_no = #TyreNo#]]>
         </isNotNull>
       </dynamic>
     </select>

     <!--更新WMS轮胎信息-->
     <update id="UpdateWMSInfoByTyreNo" parameterClass="map">
       <![CDATA[ 
        update WMS_UPLOAD_RECORD set BACKUP_TIME = SYSDATE,ITEM_NUMBER = #ITEM_NUMBER#
                                    ,ITEM_DESC= #ITEM_DESC#,LOT_NUMBER = #LOT_NUMBER#
                                    ,MES_LOT = #MES_LOT#,TEST_FLAG = #TEST_FLAG#
                                    ,PRODUCTION_TIME = to_date(#PRODUCTION_TIME#,'yyyy-mm-dd hh24:mi:ss'),UPLOAD_FLAG=0
                                    ,RETURN_FLAG = #RETURN_FLAG#
        where TYRE_NO = #TyreNo#
      ]]>
     </update>

     <!--插入WMS轮胎信息-->
     <insert id="InsertWMSInfoByTyreNo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       INSERT INTO WMS_UPLOAD_RECORD(OBJID,RECORD_TIME,BACKUP_TIME,DELETE_FLAG,TYRE_NO,GREEN_TYRE_NO,WH_ID
                                           ,SUB_WARE_HOUSE,ITEM_NUMBER,ITEM_DESC,SAP_LINE_LOC,LOT_NUMBER,MES_LOT,TEST_FLAG,RETURN_FLAG,GRADE
                                           ,WEEK,SHIFT,PRODUCTION_TIME,UPLOAD_FLAG,UPLOAD_TIME)
       VALUES(SEQ_WMS_UPLOAD_RECORD.NEXTVAL,SYSDATE,SYSDATE,0,#TyreNo#,#GreenTyreNo#,'8002'
             ,'4',#ITEM_NUMBER#,#ITEM_DESC#,#SAP_LINE_LOC#,#LOT_NUMBER#,#MES_LOT#,#TEST_FLAG#,#RETURN_FLAG#,#GRADE#
             ,#WEEK#,#SHIFT#,to_date(#PRODUCTION_TIME#,'yyyy-mm-dd hh24:mi:ss'),0,SYSDATE)
      ]]>
     </insert>

     <select id="GetHppRubberInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
       select * from Hpp_Rubber_Production where barcode =#barcode#
       ]]>
     </select>
     
     <update id="UpdateHppRubber" parameterClass="map">
       <![CDATA[ 
        update Hpp_Rubber_Production set QTY='0',LEFT_QTY='0' WHERE BARCODE=#barcode#
      ]]>
     </update>


     <select id="UpdateWMSIsStore1" parameterClass="map" resultClass="Row">
       <![CDATA[ 
         update sbm_lock_record set store_flag =  #ioFlag# where barcode =  #barCode#
       ]]>
     </select>

     <select id="UpdateWMSIsStore3" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       UPDATE wms_upload_record SET ATTRIBUTE3 = #ioFlag#,attribute4 = to_char(to_date(#date#,'yyyy-MM-dd hh24:mi:ss'),'yyyy-MM-dd hh24:mi:ss')   WHERE TYRE_NO = #barCode#
       ]]>
     </select>
     <select id="UpdateWMSIsStore5" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       UPDATE wms_upload_record SET reflag = 3  WHERE TYRE_NO = #barCode#
       ]]>
     </select>
     
     <select id="GetNewStoreInfo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
        select objid,store_place_name from HPP_STORE_PLACE where store_id in(
      select objid from HPP_STORE where store_higher_level = '0001002')
       ]]>
     </select>
     <update id="UpdateGetMaterInfoBG" parameterClass="map">
       <![CDATA[ 
       update hpp_getmatertosap set processcode = #ProcessCode#,tlgnam=#TLGNAM#,mstyp=#MSTYP#,errdes=#ERRDES#,sapid=#SAPID#,docty=#DOCTY# 
       where busid=#BUSID#
      ]]>
     </update>


   </statements>
</sqlMap>
