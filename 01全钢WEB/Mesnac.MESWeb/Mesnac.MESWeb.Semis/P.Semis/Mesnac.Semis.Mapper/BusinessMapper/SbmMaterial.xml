<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Semis.Mapper.BusinessMapper.SbmMaterial"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM SBM_MATERIAL ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.MaterialName" prepend="AND">
          <![CDATA[MATERIAL_NAME = #where.MaterialName#]]>
        </isNotNull>
        <isNotNull property="where.MaterialCode" prepend="AND">
          <![CDATA[MATERIAL_CODE = #where.MaterialCode#]]>
        </isNotNull>
        <isNotNull property="where.MajorTypeId" prepend="AND">
          <![CDATA[MAJOR_TYPE_ID = #where.MajorTypeId#]]>
        </isNotNull>
        <isNotNull property="where.MinorTypeId" prepend="AND">
          <![CDATA[MINOR_TYPE_ID = #where.MinorTypeId#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
        <isNotNull property="where.SapCode" prepend="AND">
          <![CDATA[SAP_CODE = #where.SapCode#]]>
        </isNotNull>
        <isNotNull property="where.SapFullCode" prepend="AND">
          <![CDATA[SAP_FULL_CODE = #where.SapFullCode#]]>
        </isNotNull>
        <isNotNull property="where.PdmCode" prepend="AND">
          <![CDATA[PDM_CODE = #where.PdmCode#]]>
        </isNotNull>
        <isNotNull property="where.MaterialFullName" prepend="AND">
          <![CDATA[MATERIAL_FULL_NAME = #where.MaterialFullName#]]>
        </isNotNull>
        <isNotNull property="where.MaterialShort" prepend="AND">
          <![CDATA[MATERIAL_SHORT = #where.MaterialShort#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>
     <select id="GetTermOfValidityInfo" parameterClass="map" resultClass="Row">
       <![CDATA[              
             SELECT T.MATERIAL_ID,T1.MATERIAL_CODE,T1.MATERIAL_NAME,T.MIN_TIME,T.VALID_TIME FROM SBM_MATERIAL_INFO T
             LEFT JOIN SBM_MATERIAL T1 ON T1.OBJID = T.MATERIAL_ID
             WHERE T.MATERIAL_MINOR_TYPE =5 and T.MATERIAL_ID=#MaterialId#
       ]]>
     </select>
     <select id="GetMarkReason" parameterClass="map" resultClass="Row">
       <![CDATA[
        select objid,reason_name from sbm_mark_reason where delete_flag=0 order by reason_code
       ]]>
     </select>
     <select id="getCuringInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
          select '成品胎' as MATER_TYPE, t.tyre_no as BARCODE,t1.sap_code MATERIALCODE,t1.material_full_name MATERIALNAME,t2.equip_name EQUIPNAME,1 as QTY from cpp_curing_production t 
        left join sbm_material t1 on t1.objid = t.material_id
        left join sbe_equip t2 on t2.objid = t.equip_id
        where t.tyre_no=#barcode#
       ]]>
     </select>
     <select id="getMoldingInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
               select '胎胚' as MATER_TYPE, t.green_tyre_no as BARCODE,t3.sap_code MATERIALCODE,t3.material_full_name MATERIALNAME,t4.equip_name EQUIPNAME,1 as QTY from bpm_production t 
        left join bpp_plan t1 on t1.objid = t.plan_id
        left join bpp_plan_detail t2 on t2.objid = t.plan_detail_id
        left join sbm_material t3 on t3.objid = t2.material_id
        left join sbe_equip t4 on t4.objid = t1.equip_id
        where t.green_tyre_no=#barcode#
       ]]>
     </select>
     <select id="getSemisInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
               
        select t3.minor_type_name as MATER_TYPE,  t.card_no as BARCODE,t1.sap_code MATERIALCODE,t1.material_full_name MATERIALNAME,t2.equip_name EQUIPNAME,left_qty QTY from hpp_semis_production t 
      left join sbm_material t1 on t1.objid = t.material_id
      left join sbe_equip t2 on t2.objid = t.equip_id
      left join sbm_material_minor_type t3 on t3.objid = t1.minor_type_id
      where t.card_no=#barcode#
       ]]>
     </select>
     <insert id="InsertMarkInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
       Insert into sbm_mark_info (Objid,record_time,record_user_id,barcode,reason_id,delete_flag,mark_flag)
       values(SEQ_SBM_MARK_INFO.Nextval,sysDate,#userId#,#barcode#,#reasonId#,0,#markFlag#)
       ]]>
       
     </insert>
     <update id="updateMarkFlag" parameterClass="map">
       <![CDATA[
       update $tableName$ set mark_flag=#markFlag# where $fieldName$ = #barcode#
       ]]>
     </update>
     
     <select id ="GetAllMarkReasonInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
       select objid,reason_code,reason_name,remark from sbm_mark_reason where delete_flag=0
       ]]>
       <isNotNull property="where.ReasonName" prepend="AND">
         <![CDATA[ reason_name=#where.ReasonName#]]>
       </isNotNull>
       <![CDATA[order by reason_code ]]>
     </select>

     <select id ="ExistsMarkReason" parameterClass="map" resultClass="Row">
       <![CDATA[
       select objid,reason_code,reason_name,remark from sbm_mark_reason where delete_flag=0 and reason_code=#reasonCode#
       ]]>
     </select>
     <select id ="GetMaxReasonCode" parameterClass="map" resultClass="Row">
       <![CDATA[
       select reason_code from sbm_mark_reason where delete_flag=0 order by reason_code desc
       ]]>
     </select>

     <insert id="InsertMarkReason" parameterClass="map" resultClass="Row">
       <![CDATA[
       insert into sbm_mark_reason (objid,reason_code,reason_name,remark,record_time,delete_flag,record_user_id)
       values(seq_sbm_mark_reason.nextval,#reasonCode#,#reasonName#,#remark#,sysdate,0,#UserId#)
       ]]>
     </insert>
     <select id ="GetMarkReasonByName" parameterClass="map" resultClass="Row">
       <![CDATA[
      select 1 from sbm_mark_reason where reason_name = #reasonName#
       ]]>
     </select>
     <update id="UpdateMarkReason" parameterClass="map">
       <![CDATA[
       update sbm_mark_reason set reason_name = #ReasonName#,remark=#Remark#,record_user_id=#UserId# where objid=#ObjId#
       ]]>
     </update>
     <update id="DeleteMarkReason" parameterClass="map">
       <![CDATA[
       update sbm_mark_reason set delete_flag=1,record_user_id=#UserId# where objid=#objid#
       ]]>
     </update>

     <select id ="GetAllFreezeReasonInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
       select objid,reason_code,reason_name,remark from sbm_freeze_reason where delete_flag=0
       ]]>
       <isNotNull property="where.ReasonName" prepend="AND">
         <![CDATA[ reason_name=#where.ReasonName#]]>
       </isNotNull>
       <![CDATA[order by reason_code ]]>
     </select>

     <select id ="ExistsFreezeReason" parameterClass="map" resultClass="Row">
       <![CDATA[
       select objid,reason_code,reason_name,remark from sbm_freeze_reason where delete_flag=0 and reason_code=#reasonCode#
       ]]>
     </select>
     <select id ="GetMaxFreezeReasonCode" parameterClass="map" resultClass="Row">
       <![CDATA[
       select reason_code from sbm_freeze_reason where delete_flag=0 order by reason_code desc
       ]]>
     </select>

     <insert id="InsertFreezeReason" parameterClass="map" resultClass="Row">
       <![CDATA[
       insert into sbm_freeze_reason (objid,reason_code,reason_name,remark,record_time,delete_flag,record_user_id)
       values(seq_sbm_mark_reason.nextval,#reasonCode#,#reasonName#,#remark#,sysdate,0,#UserId#)
       ]]>
     </insert>
     <select id ="GetFreezeReasonByName" parameterClass="map" resultClass="Row">
       <![CDATA[
      select 1 from sbm_freeze_reason where reason_name = #reasonName#
       ]]>
     </select>
     <update id="UpdateFreezeReason" parameterClass="map">
       <![CDATA[
       update sbm_freeze_reason set reason_name = #ReasonName#,remark=#Remark#,record_user_id=#UserId# where objid=#ObjId#
       ]]>
     </update>
     <update id="DeleteFreezeReason" parameterClass="map">
       <![CDATA[
       update sbm_freeze_reason set delete_flag=1,record_user_id=#UserId# where objid=#objid#
       ]]>
     </update>
     <select id="getSemisInfoBG" parameterClass="map" resultClass="Row">
       <![CDATA[
           select '' as MATER_TYPE,  t.BARCODE,t.sap_code MATERIALCODE,t.material_name MATERIALNAME,t.equip_name EQUIPNAME,t.left_qty QTY from hpp_rubber_production t 
      where t.BARCODE=#barcode#
      
       ]]>
     </select>


     <select id ="GetMaterialColor" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       SELECT T1.OBJID,T1.MATERIAL_NAME,T1.MATERIAL_CODE,T1.SAP_CODE,T2.MINOR_TYPE_NAME,T1.COLOR FROM SBM_MATERIAL T1 
      INNER JOIN SBM_MATERIAL_MINOR_TYPE T2 ON T1.MINOR_TYPE_ID=T2.OBJID 
      where T2.MINOR_TYPE_NAME in ('胎面','成品钢丝圈') and T1.DELETE_FLAG = 0 
       ]]>
       <isNotNull property="where.Sap" prepend="AND">
         <![CDATA[ T1.MATERIAL_NAME like '%' || #where.Sap# || '%']]>
       </isNotNull>
       <isNotNull property="where.Color" prepend="AND">
         <![CDATA[ T1.COLOR=#where.Color#]]>
       </isNotNull>
       <isNotNull property="where.Type" prepend="AND">
         <![CDATA[ T2.MINOR_TYPE_NAME=#where.Type#]]>
       </isNotNull>
       <![CDATA[order by minor_type_name]]>
     </select>

     <select id ="GetStandardWeight" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       SELECT * from sbm_standardweight
       ]]>
     </select>
     <select id ="GetSbeFHCheckInfo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       select  * from sbe_fhcheckinfo where 1=1 
       ]]>
       <isNotNull property="where.begintime" prepend="AND">
         <![CDATA[plan_date  >= to_date(#where.begintime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.endtime" prepend="AND">
         <![CDATA[plan_date <=to_date(#where.endtime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.shift" prepend="AND">
         <![CDATA[ plan_shift =#where.shift#]]>
       </isNotNull>
       <![CDATA[ order by plan_date]]>
     </select>
     
     <select id ="GetSbeWeightUnlockInfo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       select * from sbe_weightunlock where 1=1 
       ]]>
       <isNotNull property="where.begintime" prepend="AND">
         <![CDATA[record_time  >= to_date(#where.begintime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.endtime" prepend="AND">
         <![CDATA[record_time <=to_date(#where.endtime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.Equip1" prepend="AND">
         <![CDATA[ equip_name not like '%CX%' ]]>
       </isNotNull>
       <isNotNull property="where.Equip2" prepend="AND">
         <![CDATA[ equip_name like '%CX%' ]]>
       </isNotNull>
       <isNotNull property="where.EquipName" prepend="AND">
         <![CDATA[ equip_name like '%' || #where.EquipName# || '%' ]]>
       </isNotNull>
       <isNotNull property="where.reason" prepend="AND">
         <![CDATA[ REMARK like '%' || #where.reason# || '%' ]]>
       </isNotNull>
       <![CDATA[ order by record_time]]>
     </select>

     <select id ="GetSbeGSDataInfo" parameterClass="map" resultClass="Row">
       <![CDATA[     select  a.*,NVL(b.equip_name,'校验') equip_name,D.MATERIAL_NAME,case when abs(nvl(ACTUALDIAMETER,0)-nvl(STANDARDDIAMETER,0))<=0.4 then  '合格' else '不合格' end zhijing,case when abs(nvl(STANDARDWEIGHT,0)-nvl(ACTUALWEIGHT,0))<=0.03 then  '合格' else '不合格' end zhongliang from sbe_gsdatainfo a
left join sbe_equip b on b.objid = a.equip_code
LEFT JOIN HPP_PLAN_DETAIL C ON C.OBJID = A.PLAN_DETAILID
LEFT JOIN SBM_MATERIAL D ON D.OBJID = C.material_ID
where 1=1 
       ]]>
       <isNotNull property="where.begintime" prepend="AND">
         <![CDATA[a.record_time  >= to_date(#where.begintime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.endtime" prepend="AND">
         <![CDATA[a.record_time <=to_date(#where.endtime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <![CDATA[ order by a.record_time  ]]>
     </select>

     <select id ="GetSbeSmsEquipAlarm" parameterClass="map" resultClass="Row">
       <![CDATA[ 
          select  a.* from sbe_smsequipalarm a 
   left join sbe_equip b on a.equip_name = b.equip_name where 1=1 
       ]]>
       <isNotNull property="where.begintime" prepend="AND">
         <![CDATA[a.alarm_time  >= to_date(#where.begintime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.endtime" prepend="AND">
         <![CDATA[a.alarm_time <=to_date(#where.endtime#,'yyyy-mm-dd hh24:mi:ss')]]>
       </isNotNull>
       <isNotNull property="where.Alarm" prepend="AND">
         <![CDATA[a.Alarm_name like '%' || #where.Alarm# || '%']]>
       </isNotNull>
       <isNotNull property="where.Equip" prepend="AND">
         <![CDATA[a.Equip_name like '%' || #where.Equip# || '%']]>
       </isNotNull>
       <isNotNull property="where.mold" prepend="AND">
         <![CDATA[b.major_type_id = 41]]>
       </isNotNull>
       <isNotNull property="where.semis" prepend="AND">
         <![CDATA[b.major_type_id <> 41]]>
       </isNotNull>
       <![CDATA[ order by alarm_time  ]]>
     </select>


     <select id ="GetSmsEquipAlarmInfo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       select  distinct alarm_name from  sbe_smsequipalarm a
       left join sbe_equip b on b.equip_name = a.equip_name
       where alarm_name is not null 
       ]]>
       <isNotNull property="semis" prepend="AND">
         <![CDATA[b.major_type_id <> 41]]>
       </isNotNull>
       <isNotNull property="mold" prepend="AND">
         <![CDATA[b.major_type_id = 41]]>
       </isNotNull>
       <![CDATA[order by alarm_name  ]]>
     </select>
     <select id ="GetSmsMoldEquipInfo" parameterClass="map" resultClass="Row">
       <![CDATA[  select  distinct a.equip_name  from  sbe_smsequipalarm a
       left join sbe_equip b on b.equip_name = a.equip_name
        where a.equip_name is not null and b.major_type_id =41  order by a.equip_name
       ]]>
     </select>
     <select id ="GetSmsEquipInfo" parameterClass="map" resultClass="Row">
       <![CDATA[  select  distinct a.equip_name  from  sbe_smsequipalarm a
       left join sbe_equip b on b.equip_name = a.equip_name
        where a.equip_name is not null and b.major_type_id <>41  order by a.equip_name
       ]]>
     </select>

     <select id ="GetRdifKouMouldInfo" parameterClass="map" resultClass="Row">
       <![CDATA[select  a.objid,A.RFID,A.KOU_MOULD,B.USER_NAME,A.RECORD_TIME from hpp_koumould a
left join ssb_user b on b.objid = a.record_userid where 1=1
       ]]>
       <isNotNull property="where.Rfid" prepend="AND">
         <![CDATA[A.RFID like '%' || #where.Rfid# || '%']]>
       </isNotNull>
       <isNotNull property="where.Kou" prepend="AND">
         <![CDATA[ A.KOU_MOULD like '%' || #where.Kou# || '%']]>
       </isNotNull>
       <![CDATA[order by A.RECORD_TIME ]]>
     </select>

     <select id ="GetPlmInfo" parameterClass="map" resultClass="Row">
       <![CDATA[
select  row_number()over(order by B.EQUIPMENTNAME) 序号,B.EQUIPMENTNAME 机台,A.ASSEM_SAPMAT SAP编码,MAX(DECODE(A.PARMNAME,'部件代码',VLUES,NULL)) 部件代码,
C.MATERIAL_NAME 物料规格,A.ASSEM_NAME 类型,A.PROCESS_ROUTE 工艺号,a.process_version 工艺版本,a.record_time 记录时间 ,
CASE WHEN A.ASSEM_NAME LIKE '%带束层%' then MAX(DECODE(F.DUMMY1,'TieIn1',SPEC,NULL))  when  A.ASSEM_NAME LIKE '%胎体%' then MAX(DECODE(F.DUMMY1,'SqueegeeA',SPEC,NULL)) else null end 胶片1,
CASE WHEN A.ASSEM_NAME LIKE '%带束层%' then MAX(DECODE(F.DUMMY1,'Filling2',SPEC,NULL)) when  A.ASSEM_NAME LIKE '%胎体%' then MAX(DECODE(F.DUMMY1,'SqueegeeB',SPEC,NULL)) else null end 胶片2,
CASE WHEN A.ASSEM_NAME LIKE '%胎体%' then MAX(DECODE(F.DUMMY1,'TieIn',SPEC,NULL)) else null end 包边胶片,
CASE when A.ASSEM_NAME LIKE '%钢丝包布%' then MAX(DECODE(F.DUMMY1,'TieIn1',SPEC,NULL)) else null end 胶片,
CASE MAX(DECODE(A.PARMNAME,'钢丝包布贴合方向',VLUES,NULL)) when '1' then '/\' when '2' then '//' when '3' then '\\' else null end 成型贴合方向,
MAX(DECODE(A.PARMNAME,'钢丝包布包边形式',VLUES,NULL)) 钢丝包布包边形式,
MAX(DECODE(A.PARMNAME,'1##挤出机螺杆转速rpm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挤出机1##螺杆转速rpm,
MAX(DECODE(A.PARMNAME,'1##挤出机喂胶种类',VLUES,NULL)) 挤出机1##喂胶种类,
MAX(DECODE(A.PARMNAME,'1##挤出机喂料种类',VLUES,NULL)) 挤出机1##喂料种类,
MAX(DECODE(A.PARMNAME,'2##挤出机螺杆转速rpm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挤出机2##螺杆转速rpm,
MAX(DECODE(A.PARMNAME,'2##挤出机喂胶种类',VLUES,NULL)) 挤出机2##喂胶种类,
MAX(DECODE(A.PARMNAME,'2##挤出机喂料种类',VLUES,NULL)) 挤出机2##喂料种类,
MAX(DECODE(A.PARMNAME,'3##挤出机螺杆转速rpm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挤出机3##螺杆转速rpm,
MAX(DECODE(A.PARMNAME,'3##挤出机喂料种类',VLUES,NULL)) 挤出机3##喂料种类,
MAX(DECODE(A.PARMNAME,'4##挤出机螺杆转速rpm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挤出机4##螺杆转速rpm,
MAX(DECODE(A.PARMNAME,'5##挤出机螺杆转速rpm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挤出机5##螺杆转速rpm,
MAX(DECODE(A.PARMNAME,'斜边长',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 斜边长,
MAX(DECODE(A.PARMNAME,'胶片2厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片2厚度,
MAX(DECODE(A.PARMNAME,'贴合方式',VLUES,NULL)) 贴合方式,
MAX(DECODE(A.PARMNAME,'胶片1厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片1厚度,
MAX(DECODE(A.PARMNAME,'胶片1贴合位置',VLUES,NULL)) 胶片1贴合位置,
MAX(DECODE(A.PARMNAME,'胶片2贴合位置',VLUES,NULL)) 胶片2贴合位置,
MAX(DECODE(A.PARMNAME,'包胶片宽度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 包胶片宽度,
MAX(DECODE(A.PARMNAME,'包胶片厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 包胶片厚度,
MAX(DECODE(A.PARMNAME,'包胶片厚度',VLUES,NULL)) 包胶片贴合位置,
MAX(DECODE(A.PARMNAME,'H1',VLUES,NULL)) H1,
MAX(DECODE(A.PARMNAME,'H10',VLUES,NULL)) H10,
MAX(DECODE(A.PARMNAME,'H2',VLUES,NULL)) H2,
MAX(DECODE(A.PARMNAME,'H3',VLUES,NULL)) H3,
MAX(DECODE(A.PARMNAME,'H4',VLUES,NULL)) H4,
MAX(DECODE(A.PARMNAME,'H5',VLUES,NULL)) H5,
MAX(DECODE(A.PARMNAME,'H6',VLUES,NULL)) H6,
MAX(DECODE(A.PARMNAME,'H7',VLUES,NULL)) H7,
MAX(DECODE(A.PARMNAME,'H8',VLUES,NULL)) H8,
MAX(DECODE(A.PARMNAME,'H9',VLUES,NULL)) H9,
MAX(DECODE(A.PARMNAME,'W1',VLUES,NULL)) W1,
MAX(DECODE(A.PARMNAME,'W10',VLUES,NULL)) W10,
MAX(DECODE(A.PARMNAME,'W2',VLUES,NULL)) W2,
MAX(DECODE(A.PARMNAME,'W3',VLUES,NULL)) W3,
MAX(DECODE(A.PARMNAME,'W4',VLUES,NULL)) W4,
MAX(DECODE(A.PARMNAME,'W5',VLUES,NULL)) W5,
MAX(DECODE(A.PARMNAME,'W6',VLUES,NULL)) W6,
MAX(DECODE(A.PARMNAME,'W7',VLUES,NULL)) W7,
MAX(DECODE(A.PARMNAME,'W8',VLUES,NULL)) W8,
MAX(DECODE(A.PARMNAME,'W9',VLUES,NULL)) W9,
MAX(DECODE(A.PARMNAME,'胶片1宽度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片1宽度,
MAX(DECODE(A.PARMNAME,'胶片2宽度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片2宽度,
MAX(DECODE(A.PARMNAME,'包胶片上下胶片宽度差异(DR)mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 包胶片上下胶片宽度差异DR_mm,
MAX(DECODE(A.PARMNAME,'包胶片上下胶片宽度差异(OP)mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 包胶片上下胶片宽度差异OP_mm,
MAX(DECODE(A.PARMNAME,'裁断角度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 裁断角度,
MAX(DECODE(A.PARMNAME,'裁断宽度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 裁断宽度,
MAX(DECODE(A.PARMNAME,'储布张力(升降)',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 储布张力_升降,
MAX(DECODE(A.PARMNAME,'储布张力(正常)',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 储布张力_正常,
MAX(DECODE(A.PARMNAME,'大卷规格',VLUES,NULL)) 大卷规格,
MAX(DECODE(A.PARMNAME,'单根钢丝张力',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 单根钢丝张力,
MAX(DECODE(A.PARMNAME,'单条称重kg',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 单条称重kg,
MAX(DECODE(A.PARMNAME,'涤纶线间距',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 涤纶线间距,
MAX(DECODE(A.PARMNAME,'锭子风压',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 锭子风压,
MAX(DECODE(A.PARMNAME,'干燥温度℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 干燥温度,
MAX(DECODE(A.PARMNAME,'干燥张力kg',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 干燥张力kg,
MAX(DECODE(A.PARMNAME,'钢丝规格种类',VLUES,NULL)) 钢丝规格种类,
MAX(DECODE(A.PARMNAME,'钢丝帘线根数',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 钢丝帘线根数,
MAX(DECODE(A.PARMNAME,'挂涤纶线面数(上、下面)',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挂涤纶线面数_上下面,
MAX(DECODE(A.PARMNAME,'挂第二根涤纶线距帘布边缘距离mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挂第二根涤纶线距帘布边缘距离mm,
MAX(DECODE(A.PARMNAME,'挂第一根涤纶线距帘布边缘距离mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 挂第一根涤纶线距帘布边缘距离mm,
MAX(DECODE(A.PARMNAME,'冠下胶片厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 冠下胶片厚度mm,
MAX(DECODE(A.PARMNAME,'冠下胶片宽度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 冠下胶片宽度mm,
MAX(DECODE(A.PARMNAME,'后测宽mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 后测宽mm,
MAX(DECODE(A.PARMNAME,'基部胶厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 基部胶厚度mm,
MAX(DECODE(A.PARMNAME,'基部胶截面积',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 基部胶截面积,
MAX(DECODE(A.PARMNAME,'肩厚mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 肩厚mm,
MAX(DECODE(A.PARMNAME,'肩宽mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 肩宽mm,
MAX(DECODE(A.PARMNAME,'胶料种类',VLUES,NULL)) 胶料种类,
MAX(DECODE(A.PARMNAME,'胶片A接头搭接mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片A接头搭接mm,
MAX(DECODE(A.PARMNAME,'胶片A贴合定位mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片A贴合定位mm,
MAX(DECODE(A.PARMNAME,'胶片B接头搭接mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片B接头搭接mm,
MAX(DECODE(A.PARMNAME,'胶片B贴合定位mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片B贴合定位mm,
MAX(DECODE(A.PARMNAME,'胶片规格',VLUES,NULL)) 胶片规格,
MAX(DECODE(A.PARMNAME,'胶片厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片厚度mm,
MAX(DECODE(A.PARMNAME,'胶片厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片厚度,
MAX(DECODE(A.PARMNAME,'胶片宽度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胶片宽度mm,
MAX(DECODE(A.PARMNAME,'接头机压力Mpa',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 接头机压力Mpa,
MAX(DECODE(A.PARMNAME,'卷取长度m',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 卷取长度m,
MAX(DECODE(A.PARMNAME,'卷取张力',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 卷取张力,
MAX(DECODE(A.PARMNAME,'卷取张力kg',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 卷取张力kg,
MAX(DECODE(A.PARMNAME,'卷取装置垫布刹车气压',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 卷取装置垫布刹车气压,
MAX(DECODE(A.PARMNAME,'开包至完成硫化接头时间min',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 开包至完成硫化接头时间min,
MAX(DECODE(A.PARMNAME,'口型板号',VLUES,NULL)) 口型板号,
MAX(DECODE(A.PARMNAME,'冷却张力kg',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 冷却张力kg,
MAX(DECODE(A.PARMNAME,'离线烘干时间h',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 离线烘干时间h,
MAX(DECODE(A.PARMNAME,'离线烘箱温度℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 离线烘箱温度,
MAX(DECODE(A.PARMNAME,'帘布幅宽mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 帘布幅宽mm,
MAX(DECODE(A.PARMNAME,'帘布厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 帘布厚度,
MAX(DECODE(A.PARMNAME,'帘布厚度(预警)',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 帘布厚度_预警,
MAX(DECODE(A.PARMNAME,'帘布密度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 帘布密度,
MAX(DECODE(A.PARMNAME,'帘线密度(根/100mm)',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 帘线密度_每根100mm,
MAX(DECODE(A.PARMNAME,'米重',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 米重,
MAX(DECODE(A.PARMNAME,'耐磨胶截面积',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 耐磨胶截面积,
MAX(DECODE(A.PARMNAME,'耐磨胶宽度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 耐磨胶宽度mm,
MAX(DECODE(A.PARMNAME,'耐磨胶最厚点厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 耐磨胶最厚点厚度mm,
MAX(DECODE(A.PARMNAME,'内衬层单层厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 内衬层单层厚度,
MAX(DECODE(A.PARMNAME,'内衬层厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 内衬层厚度,
MAX(DECODE(A.PARMNAME,'内衬层宽度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 内衬层宽度,
MAX(DECODE(A.PARMNAME,'排胶温度℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 排胶温度,
MAX(DECODE(A.PARMNAME,'普通规格帘布超期时间h',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 普通规格帘布超期时间h,
MAX(DECODE(A.PARMNAME,'普通规格帘布存放时间h',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 普通规格帘布存放时间h,
MAX(DECODE(A.PARMNAME,'气密层厚度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 气密层厚度,
MAX(DECODE(A.PARMNAME,'气密层宽度',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 气密层宽度,
MAX(DECODE(A.PARMNAME,'前测宽mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 前测宽mm,
MAX(DECODE(A.PARMNAME,'前米重1kg/m',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 前米重每米1kg,
MAX(DECODE(A.PARMNAME,'前米重2kg/m',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 前米重每米2kg,
MAX(DECODE(A.PARMNAME,'前米重总kg/m',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 前米重总每米总kg,
MAX(DECODE(A.PARMNAME,'全钢冠下胶片重量kg/条',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 全钢冠下胶片重量每条kg,
MAX(DECODE(A.PARMNAME,'全钢基部胶重量kg/条',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 全钢基部胶重量每条kg,
MAX(DECODE(A.PARMNAME,'人造丝规格帘布超期时间h',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 人造丝规格帘布超期时间h,
MAX(DECODE(A.PARMNAME,'人造丝规格帘布存放时间h',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 人造丝规格帘布存放时间h,
MAX(DECODE(A.PARMNAME,'上胶片厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 上胶片厚度mm,
MAX(DECODE(A.PARMNAME,'是否环保',VLUES,NULL)) 是否环保,
MAX(DECODE(A.PARMNAME,'胎侧胶截面积',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胎侧胶截面积,
MAX(DECODE(A.PARMNAME,'胎侧胶宽度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胎侧胶宽度mm,
MAX(DECODE(A.PARMNAME,'胎侧胶最厚点厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胎侧胶最厚点厚度mm,
MAX(DECODE(A.PARMNAME,'胎侧型式',VLUES,NULL)) 胎侧型式,
MAX(DECODE(A.PARMNAME,'胎冠胶截面积',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胎冠胶截面积,
MAX(DECODE(A.PARMNAME,'胎冠胶重量kg/条',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 胎冠胶重量每条kg,
MAX(DECODE(A.PARMNAME,'贴胶片距带束层边缘(DR)mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 贴胶片距带束层边缘DRmm,
MAX(DECODE(A.PARMNAME,'贴胶片距带束层边缘(OP)mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 贴胶片距带束层边缘OPmm,
MAX(DECODE(A.PARMNAME,'下胶片厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 下胶片厚度mm,
MAX(DECODE(A.PARMNAME,'线速度m/min',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 线速度,
MAX(DECODE(A.PARMNAME,'型辊代号',VLUES,NULL)) 型辊代号,
MAX(DECODE(A.PARMNAME,'型胶截面积',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 型胶截面积,
MAX(DECODE(A.PARMNAME,'型胶宽度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 型胶宽度mm,
MAX(DECODE(A.PARMNAME,'型胶最厚点厚度mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 型胶最厚点厚度mm,
MAX(DECODE(A.PARMNAME,'压延辊温1##℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 压延辊温1##,
MAX(DECODE(A.PARMNAME,'压延辊温2##℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 压延辊温2##,
MAX(DECODE(A.PARMNAME,'压延辊温3##℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 压延辊温3##,
MAX(DECODE(A.PARMNAME,'压延辊温4##℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 压延辊温4##,
MAX(DECODE(A.PARMNAME,'压延前钢丝张力',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 压延前钢丝张力,
MAX(DECODE(A.PARMNAME,'预口型号',VLUES,NULL)) 预口型号,
MAX(DECODE(A.PARMNAME,'原线规格',VLUES,NULL)) 原线规格,
MAX(DECODE(A.PARMNAME,'在线烘箱温度℃',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 在线烘箱温度,
MAX(DECODE(A.PARMNAME,'整径辊编号',VLUES,NULL)) 整径辊编号,
MAX(DECODE(A.PARMNAME,'中厚mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 中厚mm,
MAX(DECODE(A.PARMNAME,'主后张力kg',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 主后张力kg,
MAX(DECODE(A.PARMNAME,'主机厂',VLUES,NULL)) 主机厂,
MAX(DECODE(A.PARMNAME,'主前张力kg',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 主前张力kg,
MAX(DECODE(A.PARMNAME,'总横截面积',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 总横截面积,
MAX(DECODE(A.PARMNAME,'总宽mm',valuemin||'|'||VLUES||'|'||VALUEMAX,NULL)) 总宽mm
from  plm_half_main  A
LEFT JOIN PLM_DEVICE_MAIN B ON A.EQUIPMENT_CODE = B.EQUIPMENTCODE AND B.DELETE_FLAG = 0
LEFT JOIN SBM_MATERIAL C ON C.SAP_FULL_CODE = A.ASSEM_SAPMAT
left join sbm_bom D ON D.MATERIAL_PARENT_ID = C.OBJID AND D.DELETE_FLAG = 0
LEFT JOIN SBM_MATERIAL E ON D.MATERIAL_ID = E.OBJID AND E.MINOR_TYPE_ID = 23 AND E.DELETE_FLAG = 0
left join sbm_bom_data  F ON  F.MATERIAL_ID = E.OBJID and F.pdm_code = D.PDM_CODE and F.delete_flag = 0
where  A.delete_flag = 0 

       ]]>
       <isNotNull property="equip" prepend="AND">
         <![CDATA[ B.EQUIPMENTNAME =#equip# ]]>
       </isNotNull>
       <isNotNull property="type" prepend="AND">
         <![CDATA[ A.ASSEM_NAME =  #type# ]]>
       </isNotNull>
       <isNotNull property="mater" prepend="AND">
         <![CDATA[ C.MATERIAL_NAME like '%' || #mater# || '%']]>
       </isNotNull>
         <![CDATA[ GROUP BY B.EQUIPMENTNAME,A.ASSEM_SAPMAT,C.MATERIAL_NAME,A.ASSEM_NAME,A.PROCESS_ROUTE,a.record_time,a.process_version ]]>
     </select>
     
     <select id ="GetPlmEquipInfo" parameterClass="map" resultClass="Row">
       <![CDATA[  select distinct b.equipmentname  from plm_half_main a
 left join plm_device_main b on a.equipment_code = b.equipmentcode
 where a.delete_flag = 0 and b.delete_flag = 0
       ]]>
     </select>  
       <select id ="GetPlmTypeInfo" parameterClass="map" resultClass="Row">
       <![CDATA[  select  distinct assem_name  from plm_half_main
       ]]>
     </select>
     
     <select id="GetSbmMaterialMinorType" parameterClass="map" resultClass="Row">
       <![CDATA[
       SELECT T.OBJID,T.MINOR_TYPE_NAME FROM SBM_MATERIAL_MINOR_TYPE T WHERE T.MAJOR_TYPE_ID IN (21,31)
       ]]>

     </select>

     <select id="GetInitTypeInfo" parameterClass="map" resultClass="Row">
       <![CDATA[SELECT  T.TOOLING_TYPE_NAME,T.OBJID FROM HSM_TOOLING_TYPE T]]>
     </select>

     <!--查询单位-->
     <select id="getUnit" parameterClass="int" resultClass="Row">
       select * from ssb_unit
     </select>

     <!--查询单位-->
     <select id="getTechItem" parameterClass="int" resultClass="Row">
       select * from HPT_SEMIS_TECH_ITEM where DELETE_FLAG=0
     </select>


     <select id ="GetPlmHalfWeightInfo" parameterClass="map" resultClass="Row">
       <![CDATA[ 
       select  a.*,case prophase when to_nchar('01') then '试制' when to_nchar('02') then '试产' when to_nchar('03') then '投产' else '' end type ,
       case a.dummy1 when to_nchar('1') then '作废' else '正常' end deleteflag
       from  plm_half_weight  a
       where 1=1 
       ]]>
       <isNotNull property="where.sap1" prepend="AND">
         <![CDATA[ a.MASTERSAP like '%'|| #where.sap1# || '%']]>
       </isNotNull>
       <isNotNull property="where.sap2" prepend="AND">
         <![CDATA[a.SUBITEMSAP like '%'|| #where.sap2# || '%']]>
       </isNotNull>
       <isNotNull property="where.type" prepend="AND">
         <![CDATA[ PROPHASE  = #where.type# ]]>
       </isNotNull>
       <isNotNull property="where.deleteflag" prepend="AND">
         <![CDATA[ dummy1  = #where.deleteflag# ]]>
       </isNotNull>
       <![CDATA[ order by record_time]]>
     </select>

     <select id="GetPlmEquip" parameterClass="map" resultClass="Row">
       <![CDATA[
          SELECT distinct (T.PROCESS_ROUTE || '@' || T.PROCESS_VERSION) AS TECHNAME FROM PLM_HALF_MAIN T WHERE T.DELETE_FLAG = 0
       ]]>
       <dynamic prepend="AND">
         <isNotNull property="PLMEQUIPCODE" prepend="AND">
           <![CDATA[T.EQUIPMENT_CODE = #PLMEQUIPCODE#]]>
         </isNotNull>
         <isNotNull property="SAPFULLCODE" prepend="AND">
           <![CDATA[T.ASSEM_SAPMAT = #SAPFULLCODE#]]>
         </isNotNull>
       </dynamic>
     </select>
     
     
  </statements>
</sqlMap>
