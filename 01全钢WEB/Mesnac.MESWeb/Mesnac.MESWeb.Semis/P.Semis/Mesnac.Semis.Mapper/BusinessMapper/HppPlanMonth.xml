<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Semis.Mapper.BusinessMapper.HppPlanMonth"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <statements>
    <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM HPP_PLAN_MONTH ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
      <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.PlanMonth" prepend="AND">
          <![CDATA[PLAN_MONTH = #where.PlanMonth#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.PlanQty" prepend="AND">
          <![CDATA[PLAN_QTY = #where.PlanQty#]]>
        </isNotNull>
        <isNotNull property="where.AdjustQty" prepend="AND">
          <![CDATA[ADJUST_QTY = #where.AdjustQty#]]>
        </isNotNull>
        <isNotNull property="where.StartDate" prepend="AND">
          <![CDATA[START_DATE = #where.StartDate#]]>
        </isNotNull>
        <isNotNull property="where.EndDate" prepend="AND">
          <![CDATA[END_DATE = #where.EndDate#]]>
        </isNotNull>
        <isNotNull property="where.PlanCreateDate" prepend="AND">
          <![CDATA[PLAN_CREATE_DATE = #where.PlanCreateDate#]]>
        </isNotNull>
        <isNotNull property="where.PlanUpdateDate" prepend="AND">
          <![CDATA[PLAN_UPDATE_DATE = #where.PlanUpdateDate#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row">
      <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>

    <!--查询实例说明-->
    <select id="GetSemis_PLAN_MONTH" parameterClass="map" resultClass="Row">
      SELECT  T1.*,T2.MATERIAL_NAME FROM HPP_PLAN_MONTH T1
      INNER JOIN SBM_MATERIAL T2 ON T1.MATERIAL_ID=T2.OBJID
      <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[t1.OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.PlanMonth" prepend="AND">
          <![CDATA[t1.PLAN_MONTH = #where.PlanMonth#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[t1.MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.MaterialCode" prepend="AND">
          <![CDATA[t2.SAP_CODE = #where.MaterialCode#]]>
        </isNotNull>
        <isNotNull property="where.PlanQty" prepend="AND">
          <![CDATA[t1.PLAN_QTY = #where.PlanQty#]]>
        </isNotNull>
        <isNotNull property="where.AdjustQty" prepend="AND">
          <![CDATA[t1.ADJUST_QTY = #where.AdjustQty#]]>
        </isNotNull>
        <isNotNull property="where.StartDate" prepend="AND">
          <![CDATA[t1.START_DATE = #where.StartDate#]]>
        </isNotNull>
        <isNotNull property="where.EndDate" prepend="AND">
          <![CDATA[t1.END_DATE = #where.EndDate#]]>
        </isNotNull>
        <isNotNull property="where.PlanCreateDate" prepend="AND">
          <![CDATA[t1.PLAN_CREATE_DATE = #where.PlanCreateDate#]]>
        </isNotNull>
        <isNotNull property="where.PlanUpdateDate" prepend="AND">
          <![CDATA[t1.PLAN_UPDATE_DATE = #where.PlanUpdateDate#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[t1.RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[t1.RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[t1.BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[t1.BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[t1.DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[t1.REMARK = #where.Remark#]]>
        </isNotNull>
      </dynamic>
    </select>

    <!--查询实例说明-->
    <select id="GetMaterialInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
   select m.*,y.minor_type_name,t.min_time,t.valid_time from SBM_MATERIAL m 
   left join sbm_material_minor_type y on m.minor_type_id=y.objid 
   left join sbm_material_info t on t.material_id = m.objid
   where m.major_type_id=31
      ]]>
    </select>

    <select id="GetMaterialInfo2" parameterClass="map" resultClass="Row">
      <![CDATA[
       select m.*,y.minor_type_name,t.min_time,t.valid_time from SBM_MATERIAL m 
       left join sbm_material_minor_type y on m.minor_type_id=y.objid 
        left join sbm_material_info t on t.material_id = m.objid
       where m.major_type_id=31
      ]]>
      <dynamic prepend="AND">
      <isNotNull property="Objid" prepend="AND">
        <![CDATA[m.OBJID >= #Objid#]]>
      </isNotNull>
      </dynamic>
    </select>
    <select id="GetMaterialInfo3" parameterClass="map" resultClass="Row">
      <![CDATA[
       select m.*,y.minor_type_name,t.min_time,t.valid_time from SBM_MATERIAL m 
       left join sbm_material_minor_type y on m.minor_type_id=y.objid 
        left join sbm_material_info t on t.material_id = m.objid
       where m.major_type_id=31
      ]]>
      <dynamic prepend="AND">
        <isNotNull property="Objid" prepend="AND">
          <![CDATA[m.OBJID = #Objid#]]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetMaterialInfo4" parameterClass="map" resultClass="Row">
      <![CDATA[
       select m.*,y.minor_type_name,t.min_time,t.valid_time from SBM_MATERIAL m 
       left join sbm_material_minor_type y on m.minor_type_id=y.objid 
        left join sbm_material_info t on t.material_id = m.objid
       where m.major_type_id=31
      ]]>
      <dynamic prepend="AND">
        <isNotNull property="minobjid" prepend="AND">
          <![CDATA[m.OBJID >= #minobjid#]]>
        </isNotNull>
        <isNotNull property="maxobjid" prepend="AND">
          <![CDATA[m.OBJID <= #maxobjid#]]>
        </isNotNull>
      </dynamic>
    </select>

    <!--下载半制品工序岗位-->
    <select id="wsDownloadWorkposts" parameterClass="map" resultClass="Row">
      select lpad(OBJID, 4, '0') POST_ID, WORK_NAME POST_NAME
      from SSB_WORK
      where DELETE_FLAG = 0
      and PROCEDURE_ID = 200

    </select>
    <insert id="InsertSplitRubber" parameterClass="map" resultClass="Row">
      <![CDATA[
   insert into hpp_rubber_production(objid,BARCODE,EQUIP_CODE,MATERIAL_CODE,MATERIAL_NAME,SAP_CODE,Proc_User_Name,EQUIP_NAME,QTY,Left_Qty,Produce_Time,Valid_Date,Shelf_No,
Record_Time,DELETE_FLAG,REMARK,DUMMY_1,DUMMY_2,DUMMY_3,DUMMY_4,Unit_Name,BATCH,Pro_Factory,Mark_Flag,DUMMY_5,DUMMY_6,AMOUNT)
SELECT OBJID,#newbarcode#,EQUIP_CODE,MATERIAL_CODE,MATERIAL_NAME,SAP_CODE,PROC_USER_NAME,EQUIP_NAME,#weight#,#weight#,PRODUCE_TIME,VALID_DATE,SHELF_NO,RECORD_TIME,
DELETE_FLAG,REMARK,DUMMY_1,DUMMY_2,DUMMY_3,DUMMY_4,UNIT_NAME,BATCH,PRO_FACTORY,MARK_FLAG,DUMMY_5,DUMMY_6,AMOUNT
 FROM (SELECT * FROM hpp_rubber_production WHERE BARCODE = #barcode# AND DELETE_FLAG = 0 ORDER BY RECORD_TIME DESC) WHERE ROWNUM = 1
      ]]>
    </insert>

    <insert id="InsertSplitStorage" parameterClass="map" resultClass="Row">
      <![CDATA[ insert  into hpp_storage_detail(objid,record_user_id,record_time,backup_flag,backup_time,delete_flag,factory_id,seq_index,remark,card_no,shelf_no,
 grade_code,update_time,update_user_id,dummy1,dummy2,dummy3,dummy4,store_place_id,sub_store_place_id,used_flag,dummy5,dummy6,dummy7,dummy8)
 select seq_hpp_storage_detail.nextval,record_user_id,record_time,backup_flag,backup_time,delete_flag,factory_id,seq_index,remark,#newbarcode#,shelf_no,
 grade_code,update_time,update_user_id,dummy1,dummy2,dummy3,dummy4,store_place_id,sub_store_place_id,used_flag,dummy5,dummy6,#weight#,dummy8
 from (select  *  from  hpp_storage_detail where card_no = #barcode# and DELETE_FLAG = 0 ORDER BY RECORD_TIME DESC) WHERE ROWNUM = 1
      ]]>
    </insert>
    
  </statements>
</sqlMap>
