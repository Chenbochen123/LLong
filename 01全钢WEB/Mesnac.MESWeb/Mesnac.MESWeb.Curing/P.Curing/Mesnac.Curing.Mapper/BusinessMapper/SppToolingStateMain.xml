<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Curing.Mapper.BusinessMapper.SppToolingStateMain"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

   <statements>
	 <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM SPP_TOOLING_STATE_MAIN ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
	  <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.FactoryId" prepend="AND">
          <![CDATA[FACTORY_ID = #where.FactoryId#]]>
        </isNotNull>
        <isNotNull property="where.SeqIndex" prepend="AND">
          <![CDATA[SEQ_INDEX = #where.SeqIndex#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
        <isNotNull property="where.ToolingId" prepend="AND">
          <![CDATA[TOOLING_ID = #where.ToolingId#]]>
        </isNotNull>
        <isNotNull property="where.ToolingBarcode" prepend="AND">
          <![CDATA[TOOLING_BARCODE = #where.ToolingBarcode#]]>
        </isNotNull>
        <isNotNull property="where.MaterialId" prepend="AND">
          <![CDATA[MATERIAL_ID = #where.MaterialId#]]>
        </isNotNull>
        <isNotNull property="where.LoadAmount" prepend="AND">
          <![CDATA[LOAD_AMOUNT = #where.LoadAmount#]]>
        </isNotNull>
        <isNotNull property="where.ToolingState" prepend="AND">
          <![CDATA[TOOLING_STATE = #where.ToolingState#]]>
        </isNotNull>
        <isNotNull property="where.UpdateTime" prepend="AND">
          <![CDATA[UPDATE_TIME = #where.UpdateTime#]]>
        </isNotNull>
        <isNotNull property="where.UpdateUserId" prepend="AND">
          <![CDATA[UPDATE_USER_ID = #where.UpdateUserId#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row"> 
	  <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>
     <update id="UpdateStateMainAmount" parameterClass="map">
       <![CDATA[
       update spp_tooling_state_main set load_amount = load_amount-1 where objid=#mainId# and load_amount>0
       ]]>
     </update>
     <select id="GetGreenTyreStorageExists1" parameterClass="map" resultClass="Row">
       <![CDATA[  
         select t1.material_parent_id material_id,t3.material_name
           ,t2.objid bom_id, t2.delete_flag,t2.lastmodify_date
           from 
           (select MATERIAL_PARENT_ID from  sbm_bom where objid = #bom_id# ) t1 
           left join sbm_bom t2 on t1.material_parent_id=t2.material_parent_id 
           left join sbm_material t3 on t3.objid = t2.material_id
           where t3.objid = #material_id#
           order by t2.delete_flag,t2.lastmodify_date
       ]]>
     </select>
     <select id="GetGreenTyreStorageExists2" parameterClass="map" resultClass="Row">
       <![CDATA[  
         select b.EQUIP_CODE,NVL(IS_CHECKMATER,0) IS_CHECKMATER from CPP_CURING_EQUIP_CHECK a
         left join SBE_EQUIP b on a.EQUIP_ID = b.objid
         where EQUIP_ID = #equip_id#
         order by b.EQUIP_CODE
       ]]>
     </select>
     <select id="GetGreenTyreStorageExists" parameterClass="map" resultClass="Row">
       <![CDATA[  
         select t2.material_parent_id material_id,t.load_amount,t.in_time,t1.material_name ,T.TOOLING_ID,t.material_id mater_id from bsm_storage_tooling t
           left join sbm_material t1 on t1.objid = t.material_id
           left join sbm_bom_data t2 on t2.material_id = t.material_id and t2.delete_flag=0
           where t.tooling_barcode=#barcode# and t.delete_flag=0  
       ]]>
     </select>
     <select id="GetGreenTyreStorageExists3" parameterClass="map" resultClass="Row">
       <![CDATA[  
         select t2.material_parent_id material_id,t.load_amount,t.in_time,t1.material_name 
,T.TOOLING_ID,t.material_id mater_id ,t3.green_tyre_no,t4.end_time
           from bsm_storage_tooling t
           left join sbm_material t1 on t1.objid = t.material_id
           left join sbm_bom_data t2 on t2.material_id = t.material_id
           left join bsm_storage_detail t3 on t3.storage_tooling_id = t.objid
           left join bpm_production t4 on t3.green_tyre_no = t4.green_tyre_no
           where t.tooling_barcode=#barcode# and t.delete_flag=0 and t2.delete_flag=0 and t1.delete_flag = 0
           order by t4.end_time  
       ]]>
     </select>
     <select id="GetTyreState" parameterClass="map" resultClass="Row">
       <![CDATA[  
         SELECT  C.TYRE_STATE, B.* FROM Bsm_Tooling_Load_Main A 
           LEFT JOIN Bsm_Tooling_Load_Detail B ON A.OBJID = B.MAIN_ID
           LEFT JOIN SPP_TYRE_STATE C ON B.GREEN_TYRE_NO = C.GREEN_TYRE_NO AND C.DELETE_FLAG = 0
           WHERE A.DELETE_FLAG =0 AND B.DELETE_FLAG = 0 AND A.TOOLING_BARCODE = #barcode#
       ]]>
     </select>
     <select id="GetCuringProInfoByGreenTyreNo" parameterClass="map" resultClass="Row">
       <![CDATA[  
         SELECT T2.MATERIAL_NAME,T3.EQUIP_NAME || T4.SHOW_NAME EQUIP_NAME
, T6.SHIFT_NAME,T7.CLASS_NAME
, T.* FROM CPP_CURING_PRODUCTION T 
LEFT JOIN CPP_CURING_PLAN_DETAIL T1 ON T.PLAN_DETAIL_ID = T1.OBJID
LEFT JOIN SBM_MATERIAL T2 ON T1.MATERIAL_ID = T2.OBJID
LEFT JOIN SBE_EQUIP T3 ON T.EQUIP_ID = T3.OBJID
LEFT JOIN CBE_EQUIP_POSITION T4 ON T.EQUIP_POSITION = T4.OBJID
LEFT JOIN CPP_CURING_SHIFT_MASTER T5 ON T.SHIFT_MASTER_ID = T5.OBJID
LEFT JOIN SSB_SHIFT T6 ON T5.SHIFT_ID = T6.OBJID
LEFT JOIN SSB_CLASS T7 ON T5.CLASS_ID = T7.OBJID
         WHERE T.GREEN_TYRE_NO =  #greenTyreNo#
       ]]>
     </select>
     <delete id="DeleteBsmToolingLoadMain" parameterClass="map">
       <![CDATA[
       delete from bsm_tooling_load_main where objid = #ToolMainID# 
       ]]>
     </delete>
     <delete id="DeleteBsmToolingLoadDetail" parameterClass="map" >
      <![CDATA[
      delete from bsm_tooling_load_detail where green_tyre_no=#GreenTyreNo# 
      ]]>
     </delete>
     <select id="GetMainID" parameterClass="map" resultClass="Row">
       <![CDATA[  
         select main_id from bsm_tooling_load_detail
        where green_tyre_no=#GreenTyreNo# 
       ]]>
     </select>
     <select id="GetDetailCount" parameterClass="map" resultClass="Row">
       <![CDATA[  
         select * from bsm_tooling_load_detail
        where MAIN_ID=#ToolMainID# 
       ]]>
     </select>
     <update id="UpdateToolingMainAmount" parameterClass="map">
       <![CDATA[
       update bsm_tooling_load_main set load_amount = load_amount-1 where objid=#ToolMainID# and load_amount>0
       ]]>
     </update>

     <select id="GetWTTyreNo" parameterClass="map" resultClass="Row">
       <![CDATA[  
       SELECT * FROM WT_TYRE_NO_TABLE
       WHERE TYRE_NO = #TyreNo#
       ]]>
     </select>

     <select id="GetFcheckLockEquip" parameterClass="map" resultClass="Row">
       <![CDATA[    
          select to_char(DEFECTNAME) DEFECTNAME, to_char(ALARM_CONTROL) ALARM_CONTROL,TO_CHAR(NVL(ALARM_COUNT,0)) ALARM_COUNT,TO_CHAR(NVL(ALARM_TIME,0)) ALARM_TIME, to_char(C.EQUIP_NAME) EQUIP_NAME,
        CASE WHEN EQUIP_POSITION = 1 THEN '左模' else '右模' end mould,to_char(A.OBJID) OBJID,SYSDATE RECORD_TIME,'' TYREID   from  FQD_DEFECT_INFO A
        inner JOIN CPP_CURING_PRODUCTION B ON B.DELETE_FLAG = 0 
        LEFT JOIN SBE_EQUIP C ON C.OBJID = B.EQUIP_ID AND C.DELETE_FLAG = 0 
          where work_process_id = 500 and A.delete_flag = 0 and defectname = #defectname#  AND B.TYRE_NO = #barcode#
        and b.end_time > sysdate - (select NVL(ALARM_TIME,0) from FQD_DEFECT_INFO where  work_process_id = 500 and delete_flag = 0 and defectname = #defectname#)/24 
        
        UNION ALL
        SELECT * FROM ( SELECT distinct '' a,'' b,'' c,'' d,'' e,'' f,'' G,max(a.record_time) record_time,a.TYREID from  fqf_fcheck_info  a
        inner join cpp_curing_production b on a.tyreid = b.tyre_no and b.delete_flag = 0
        where a.delete_flag = 0 and (substr(a.defectname,4,length(a.defectname)) =#defectname# or a.defectname = #defectname#)
        and b.equip_id = (select equip_id from cpp_curing_production where tyre_no = #barcode#)
        and b.equip_position = (select equip_position from cpp_curing_production where tyre_no = #barcode#)
        and b.end_time > sysdate - (select NVL(ALARM_TIME,0) from FQD_DEFECT_INFO where  work_process_id = 500 and delete_flag = 0 and defectname = #defectname#)/24 
        and a.gradeid = 5 
        group by a.TYREID
        order by record_time desc)
       ]]>
     </select>
     <select id="GetFcheckLockEquipjj" parameterClass="map" resultClass="Row">
       <![CDATA[    
          select to_char(DEFECTNAME) DEFECTNAME, to_char(ALARM_CONTROL) ALARM_CONTROL,TO_CHAR(NVL(ALARM_COUNT_JJ,0)) ALARM_COUNT_JJ,TO_CHAR(NVL(ALARM_TIME,0)) ALARM_TIME, to_char(C.EQUIP_NAME) EQUIP_NAME,
        CASE WHEN EQUIP_POSITION = 1 THEN '左模' else '右模' end mould,to_char(A.OBJID) OBJID,SYSDATE RECORD_TIME,'' TYREID   from  FQD_DEFECT_INFO A
        inner JOIN CPP_CURING_PRODUCTION B ON B.DELETE_FLAG = 0 
        LEFT JOIN SBE_EQUIP C ON C.OBJID = B.EQUIP_ID AND C.DELETE_FLAG = 0 
          where work_process_id = 500 and A.delete_flag = 0 and defectname = #defectname#  AND B.TYRE_NO = #barcode#
        and b.end_time > sysdate - (select NVL(ALARM_TIME,0) from FQD_DEFECT_INFO where  work_process_id = 500 and delete_flag = 0 and defectname = #defectname#)/24 
        
        UNION ALL
        SELECT * FROM ( SELECT distinct '' a,'' b,'' c,'' d,'' e,'' f,'' G,max(a.record_time) record_time,a.TYREID from  fqf_fcheck_info  a
        inner join cpp_curing_production b on a.tyreid = b.tyre_no and b.delete_flag = 0
        where a.delete_flag = 0 and (substr(a.defectname,4,length(a.defectname)) =#defectname# or a.defectname = #defectname#)
        and b.equip_id = (select equip_id from cpp_curing_production where tyre_no = #barcode#)
        and b.equip_position = (select equip_position from cpp_curing_production where tyre_no = #barcode#)
        and b.end_time > sysdate - (select NVL(ALARM_TIME,0) from FQD_DEFECT_INFO where  work_process_id = 500 and delete_flag = 0 and defectname = #defectname# )/24 
         and not exists (select aa.tyreid from fqf_fcheck_info aa where aa.tyreid = a.tyreid and aa.new_flag = 0 and aa.gradeid = a.gradeid )
        and (a.gradeid = 2 or a.gradeid = 3 or a.gradeid = 4)
        group by a.TYREID
        order by record_time desc)
       ]]>
     </select>    
     <select id="GetShouchiBanben" parameterClass="map" resultClass="Row">
       <![CDATA[
select * from sbe_shouchi
       ]]>
     </select>
     
  </statements>
</sqlMap>
