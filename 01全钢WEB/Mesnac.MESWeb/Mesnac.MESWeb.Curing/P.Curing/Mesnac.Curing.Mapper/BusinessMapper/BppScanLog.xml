<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Mesnac.Curing.Mapper.BusinessMapper.BppScanLog"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <statements>
    <!--查询数据-->
    <sql id="includeSelect">
      <![CDATA[SELECT * FROM BPP_SCAN_LOG ]]>
    </sql>
    <!--查询条件-->
    <sql id="includeWhere">
      <dynamic prepend="WHERE">
        <isNotNull property="where.ObjId" prepend="AND">
          <![CDATA[OBJID = #where.ObjId#]]>
        </isNotNull>
        <isNotNull property="where.ScanBarcode" prepend="AND">
          <![CDATA[SCAN_BARCODE = #where.ScanBarcode#]]>
        </isNotNull>
        <isNotNull property="where.Rfid" prepend="AND">
          <![CDATA[RFID = #where.Rfid#]]>
        </isNotNull>
        <isNotNull property="where.PlanDetailId" prepend="AND">
          <![CDATA[PLAN_DETAIL_ID = #where.PlanDetailId#]]>
        </isNotNull>
        <isNotNull property="where.IsSuccess" prepend="AND">
          <![CDATA[IS_SUCCESS = #where.IsSuccess#]]>
        </isNotNull>
        <isNotNull property="where.FaultReason" prepend="AND">
          <![CDATA[FAULT_REASON = #where.FaultReason#]]>
        </isNotNull>
        <isNotNull property="where.RecordTime" prepend="AND">
          <![CDATA[RECORD_TIME = #where.RecordTime#]]>
        </isNotNull>
        <isNotNull property="where.RecordUserId" prepend="AND">
          <![CDATA[RECORD_USER_ID = #where.RecordUserId#]]>
        </isNotNull>
        <isNotNull property="where.DeleteFlag" prepend="AND">
          <![CDATA[DELETE_FLAG = #where.DeleteFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupFlag" prepend="AND">
          <![CDATA[BACKUP_FLAG = #where.BackupFlag#]]>
        </isNotNull>
        <isNotNull property="where.BackupTime" prepend="AND">
          <![CDATA[BACKUP_TIME = #where.BackupTime#]]>
        </isNotNull>
        <isNotNull property="where.Remark" prepend="AND">
          <![CDATA[REMARK = #where.Remark#]]>
        </isNotNull>
        <isNotNull property="where.EquipId" prepend="AND">
          <![CDATA[EQUIP_ID = #where.EquipId#]]>
        </isNotNull>
      </dynamic>
    </sql>
    <!--排序条件-->
    <sql id="includeOrderString">
      <isNotNull property="OrderString" prepend="">
        ORDER BY $OrderString$
      </isNotNull>
    </sql>

    <!--查询实例说明-->
    <select id="GetPageDataByReader" parameterClass="map" resultClass="Row">
      <include refid="includeSelect"/>
      <include refid="includeWhere"/>
      <include refid="includeOrderString"/>
    </select>
    <select id="GetMoldingRFIDScanInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
      SELECT T.SCAN_BARCODE,T.RFID,T2.EQUIP_NAME,T5.MINOR_TYPE_NAME,T4.MATERIAL_NAME,case to_char(t.is_success) when 'True' then '成功' else '失败' end IS_SUCCESS,T.FAULT_REASON,T.RECORD_TIME,T1.USER_NAME 
      , CASE T.BACKUP_FLAG WHEN 1 THEN 'RFID' WHEN 2 THEN '扫描枪' ELSE '' END SCAN_TYPE
      FROM BPP_SCAN_LOG T
      LEFT JOIN SSB_USER T1 ON T1.OBJID = T.RECORD_USER_ID
      LEFT JOIN SBE_EQUIP T2 ON T2.OBJID = T.EQUIP_ID
      LEFT JOIN HPP_SEMIS_PRODUCTION T3 ON T3.CARD_NO = T.SCAN_BARCODE
      LEFT JOIN SBM_MATERIAL T4 ON T4.OBJID = T3.MATERIAL_ID
      LEFT JOIN SBM_MATERIAL_MINOR_TYPE T5 ON T5.OBJID = T4.MINOR_TYPE_ID
      WHERE T.DELETE_FLAG=0
       ]]>
      <dynamic prepend="AND">
        <isNotNull property="where.BeginTime" prepend="AND">
          <![CDATA[T.RECORD_TIME >=#where.BeginTime#]]>
        </isNotNull>
        <isNotNull property="where.EndTime" prepend="AND">
          <![CDATA[T.RECORD_TIME <=#where.EndTime#]]>
        </isNotNull>
        <isNotNull property="where.RFIDNo" prepend="AND">
          <![CDATA[T.RFID=#where.RFIDNo#]]>
        </isNotNull>
        <isNotNull property="where.CardNo" prepend="AND">
          <![CDATA[T.SCAN_BARCODE=#where.CardNo#]]>
        </isNotNull>
        <isNotNull property="where.EquipID" prepend="AND">
          <![CDATA[T.EQUIP_ID=#where.EquipID#]]>
        </isNotNull>
        <isNotNull property="where.Is_Success" prepend="AND">
          <![CDATA[T.IS_SUCCESS=#where.Is_Success#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[
      ORDER BY T.RECORD_TIME DESC
      ]]>
    </select>

    <select id="GetNewBillNo" parameterClass="map" resultClass="Row">
      <![CDATA[
       SELECT COUNT(1) ID FROM see_equip_stop_record T
       ]]>
      <dynamic prepend="WHERE">
        <isNotNull property="BillDate" prepend="AND">
          <![CDATA[T.Bill_Date = #BillDate#]]>
        </isNotNull>
      </dynamic>
    </select>
    <select id="GetSemisEquipRepairRecoed" parameterClass="map" resultClass="Row">
      <![CDATA[
      SELECT T5.USER_NAME RECORD_USER_NAME, T1.*,T2.EQUIP_NAME,T3.EQUIP_STOP_TYPE_NAME,T4.EQUIP_STOP_REASON_NAME
        ,u1.user_name || ',' || u2.user_name|| ',' || u3.user_name|| ',' || u4.user_name REPAIR_NAME
        ,case nvl(t1.repair_status,0) when 0 then '停机开始' when 1 then '维修开始' when 2 then '维修结束' when 3 then '停机结束' end STATUS
        FROM SEE_EQUIP_STOP_RECORD T1 LEFT JOIN SBE_EQUIP T2 ON T1.EQUIP_ID=T2.OBJID
        LEFT JOIN SBE_EQUIP_STOP_TYPE T3 ON T1.STOP_TYPE_ID=T3.OBJID
        LEFT JOIN SBE_EQUIP_STOP_REASON T4 ON T1.STOP_REASON_ID=T4.OBJID
        LEFT JOIN SSB_USER T5 ON T1.RECORD_USER_ID=T5.OBJID
        left join SSB_USER u1 on t1.repair_user_id = u1.objid 
        left join SSB_USER u2 on t1.repair_user_id_1 = u2.objid 
        left join SSB_USER u3 on t1.repair_user_id_2 = u3.objid 
        left join SSB_USER u4 on t1.repair_user_id_3 = u4.objid 
        WHERE t1.stop_type_id <> 1 and t1.stop_type_id <> 0
       ]]>
      <dynamic prepend="AND">
        <isNotNull property="EQUIP_ID" prepend="AND">
          <![CDATA[T1.EQUIP_ID = #EQUIP_ID#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[
       order by t1.bill_no
      ]]>
    </select>
    <select id="GetSemisEquipStopType" parameterClass="map" resultClass="Row">
      <![CDATA[
       select t.*,t1.major_type_name from sbe_equip_stop_type t
       left join sbe_equip_major_type t1 on t.equip_major_type_id = t1.objid
       where t.delete_flag = 0
       order by t.equip_major_type_id,t.equip_stop_type_name
       ]]>
    </select>
    <select id="GetSemisEquipStopReason" parameterClass="map" resultClass="Row">
      <![CDATA[
       select t.*, t1.major_type_name from sbe_equip_stop_reason t
       left join sbe_equip_major_type t1 on t.equip_major_type_id = t1.objid
       where t.delete_flag = 0
       order by t.equip_major_type_id,t.equip_stop_reason_name
       ]]>
    </select>

    <select id="GetNewBillNoWH" parameterClass="map" resultClass="Row">
      <![CDATA[
       SELECT COUNT(1) ID FROM SBE_EQUIP_REPAIR_PLAN T
       ]]>
      <dynamic prepend="WHERE">
        <isNotNull property="BillDate" prepend="AND">
          <![CDATA[T.Bill_Date = #BillDate#]]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetSemisEquipRepairRecoedWH" parameterClass="map" resultClass="Row">
      <![CDATA[
      SELECT T1.USER_NAME RESPONSE_USER_NAME,T2.USER_NAME FINISH_USER_NAME,T3.USER_NAME CONFIRM_USER_NAME,
         CASE T.PLAN_STOPTIME WHEN 0 THEN '本月上旬' WHEN 1 THEN '本月中旬' WHEN 2 THEN '本月下旬' WHEN 3 THEN '每月' WHEN 4 THEN '每周'
        ELSE '123' END PLAN_STOPTIME_TEXT,
          T4.EQUIP_NAME,
         T.*, T.ROWID
          FROM SBE_EQUIP_REPAIR_PLAN T
        LEFT JOIN SSB_USER T1 ON T.RESPONSE_USER=T1.OBJID
        LEFT JOIN SSB_USER T2 ON T.FINISH_USER=T2.OBJID
        LEFT JOIN SSB_USER T3 ON T.CONFIRM_USER=T3.OBJID
        LEFT JOIN SBE_EQUIP T4 ON T.EQUIP_ID=T4.OBJID
        WHERE 1=1 
       ]]>
      <dynamic prepend="AND">
        <isNotNull property="EquipID" prepend="AND">
          <![CDATA[T.EQUIP_ID = #EquipID#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[
       order by t.bill_no
      ]]>
    </select>

    <select id="GetNewBillNoXJ" parameterClass="map" resultClass="Row">
      <![CDATA[
       SELECT COUNT(1) ID FROM SBE_EQUIP_INSPECTION_PLAN T
       ]]>
      <dynamic prepend="WHERE">
        <isNotNull property="BillDate" prepend="AND">
          <![CDATA[T.Bill_Date = #BillDate#]]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetSemisEquipRepairRecoedXJ" parameterClass="map" resultClass="Row">
      <![CDATA[
       SELECT B.EQUIP_NAME,C.USER_NAME INSPECTION_USER_NAME, 
       CASE A.PLAN_TYPE_ID WHEN 0 THEN '自动' WHEN 1 THEN '手动' END PLAN_TYPE_NAME,
       CASE A.INSPECTION_STATUS WHEN 1 THEN '未开始' WHEN 2 THEN '进行中' WHEN 3 THEN '已完成' END STATUS,
       D.MINOR_TYPE_NAME || '电器检点项目' AS FANGAN_NAME,
       A.* 
       FROM SBE_EQUIP_INSPECTION_PLAN A
       LEFT JOIN SBE_EQUIP B ON A.EQUIP_ID = B.OBJID AND B.DELETE_FLAG = 0
       LEFT JOIN SSB_USER C ON A.INSPECTION_USER_ID = C.OBJID AND C.DELETE_FLAG = 0
       LEFT JOIN SBE_EQUIP_MINOR_TYPE D ON B.MINOR_TYPE_ID = D.OBJID 
       WHERE 1=1 and A.DELETE_FLAG = 0
      ]]>
      <dynamic prepend="AND">
        <isNotNull property="EQUIP_ID" prepend="AND">
          <![CDATA[A.EQUIP_ID = #EQUIP_ID#]]>
        </isNotNull>
        <isNotNull property="EQUIP_CODE" prepend="AND">
          <![CDATA[B.EQUIP_NAME = #EQUIP_CODE#]]>
        </isNotNull>
        <isNotNull property="BeginTime" prepend="AND">
          <![CDATA[A.INSPECTION_PLAN_DATE >= #BeginTime#]]>
        </isNotNull>
        <isNotNull property="EndTime" prepend="AND">
          <![CDATA[A.INSPECTION_PLAN_DATE <= #EndTime#]]>
        </isNotNull>
      </dynamic>
      <![CDATA[
        order by A.bill_no
      ]]>
    </select>

    <select id="GetDistributeBarcodeInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
       select a.begin_barcode,a.end_barcode from bpm_molding_barcode a
       left join ssb_user b on a.molding_user_id = b.objid
       where b.work_barcode = #WorkBarcode# and rownum <=10
       order by a.objid desc
      ]]>
    </select>

    <select id="GetDistributeBarcodeInfoNew" parameterClass="map" resultClass="Row">
      <![CDATA[
        select a.begin_barcode,a.end_barcode from (
        select * from bpm_molding_barcode  where molding_user_id = #WorkBarcode# and delete_flag = 0
        order by objid desc
        ) a where  rownum <=10
      ]]>
    </select>
    <select id="GetEquipStopReasonAndType" parameterClass="map" resultClass="Row">
      <![CDATA[
       select t.objid typeID,t.equip_stop_type_name typeName,r.objid reasonID,r.equip_stop_reason_name reasonName,t.equip_major_type_id equipid from sbe_equip_stop_type t
left join sbe_equip_stop_reason r on r.Equip_Stop_Type_Id=t.objid where r.Equip_major_type_id=#EquipID# and t.Equip_major_type_id=#EquipID#

       ]]>
    </select>

    <select id="GetChangeJNTime" parameterClass="map" resultClass="Row">
      <![CDATA[
select *  from (
select   a.*  from CIM_CAPSULE_REPLACE_RECORD a
left join cpp_curing_production b on a.equipid = b.equip_id and a.lrflag = b.equip_position
where b.tyre_no =  #tyreno# and a.begintime >=b.end_time  
order by a.begintime ) where rownum = 1
       ]]>
    </select>
    <select id="GetLockBars" parameterClass="map" resultClass="Row">
      <![CDATA[
select tyre_no  from  cpp_curing_production
where begin_time >=to_date(#changeTimeBegin#,'yyyy-MM-dd hh24:mi:ss')
and  begin_time <=to_date(#changeTimeEnd#,'yyyy-MM-dd hh24:mi:ss')
and delete_flag = 0 and equip_id = #equipid# and equip_position = #lrflag#
       ]]>
    </select>

    <select id="GetRbRecordInfo" parameterClass="map" resultClass="Row">
      <![CDATA[select A.TYRE_NO,C.MATERIAL_FULL_NAME,D.EQUIP_NAME,E.USER_NAME,A.RECORD_TIME,a.DEFECT_NAME from sbe_RBrecord A
 LEFT JOIN CPP_CURING_PRODUCTION B ON A.TYRE_NO = B.TYRE_NO
 LEFT JOIN SBM_MATERIAL C ON C.OBJID = B.MATERIAL_ID
 LEFT JOIN SBE_EQUIP D ON D.OBJID = B.EQUIP_ID
 LEFT JOIN SSB_USER E ON E.OBJID=A.USER_ID
     ]]>
      <dynamic prepend="WHERE">
        <isNotNull property="where.TyreNo" prepend="AND">
          <![CDATA[A.TYRE_NO = #where.TyreNo# ]]>
        </isNotNull>
        <isNotNull property="where.BeginTime" prepend="AND">
          <![CDATA[A.RECORD_TIME >= #where.BeginTime# ]]>
        </isNotNull>
        <isNotNull property="where.EndTime" prepend="AND">
          <![CDATA[A.RECORD_TIME <= #where.EndTime#]]>
        </isNotNull>
        <isNotNull property="where.DefectName" prepend="AND">
          <![CDATA[ a.DEFECT_NAME LIKE '%' || #where.DefectName# || '%']]>
        </isNotNull>
      </dynamic>
    </select>

    <select id="GetZQDQStandInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
            select distinct  nvl(all_curing_time,0) zongtime,nvl(curing_time_02+curing_time_03+curing_time_04+curing_time_05+curing_time_06,0) zqtime,nvl(curing_time_07+curing_time_08+curing_time_09+curing_time_11,0) dqtime 
      from  CPT_CURING_TECH_DATA where material_id = (select distinct b.material_id  from  bpm_production a
      left join bpp_plan_detail b on a.plan_detail_id = b.objid
      where a.green_tyre_no = #TyreNo#) and delete_flag = 0
       ]]>
    </select>
    <select id="GetMoldingFXFlag" parameterClass="map" resultClass="Row">
      <![CDATA[
select to_nchar(nvl(c.pt_type_id,0)) pt from sbm_material a
left join cpp_curing_production b on b.material_id = a.objid
left join FQF_PTSTANDARD_DETAIL c on c.material_id = a.objid
where b.tyre_no = #TYRENO#
union all 
select dummy1 from bqc_qcrecord where tyreid = #TYRENO# and new_flag = 1 and delete_flag = 0
       ]]>
    </select>

    <select id="GetSbeMunuRecord1" parameterClass="map" resultClass="Row">
      <![CDATA[select  *  from  sbe_munurecord where equip_id = #equipName# order by record_time desc
       ]]>
    </select>

    <insert id="InsertSbeManuRecord1" parameterClass="map" resultClass="Row">
      <![CDATA[
insert into sbe_munurecord(objid,equip_id,tyre_nol,tyre_nor,begin_time)
values(seq_sbe_munurecord.nextval,#equipName#,#TyreL#,#TyreR#,sysdate)
       ]]>
    </insert>

    <update id="updateSbeMunuRecord" parameterClass="map" >
      <![CDATA[
update sbe_munurecord set end_time = sysdate where objid = #objid#
       ]]>
    </update>

    <select id="GetDxPressStandard" parameterClass="map" resultClass="Row">
      <![CDATA[select * from cpp_dxstandard where item like '%定型压力%' order by objid
       ]]>
    </select>
    <select id="GetDxTechInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
    select parm_value from cpt_curing_tech_parm_data where objid in (
  select case when bla.dummy1 >=0 and bla.dummy1<=100 then tech.second_shaping_press_1 
  when bla.dummy1 >100 and bla.dummy1<=200 then tech.second_shaping_press_2 else tech.second_shaping_press_3 end press
     from ( select distinct second_shaping_press_1 , second_shaping_press_2 , second_shaping_press_3 from cpt_curing_tech y where y.material_id = (
select  x1.material_id  from  bpm_production x left join bpp_plan_detail x1 on x1.objid = x.plan_detail_id where x.green_tyre_no = #LeftTyreNo#)
and y.delete_flag = 0  ) tech
left join   cbe_curing_bladder_in bla on bla.bladder_code = #LeftCapsule#
)
union all

    select parm_value from cpt_curing_tech_parm_data where objid in (
  select case when bla.dummy1 >=0 and bla.dummy1<=100 then tech.second_shaping_press_1 
  when bla.dummy1 >100 and bla.dummy1<=200 then tech.second_shaping_press_2 else tech.second_shaping_press_3 end press
     from ( select distinct second_shaping_press_1 , second_shaping_press_2 , second_shaping_press_3 from cpt_curing_tech y where y.material_id = (
select  x1.material_id  from  bpm_production x left join bpp_plan_detail x1 on x1.objid = x.plan_detail_id where x.green_tyre_no = #RightTyreNo#)
and y.delete_flag = 0  ) tech
left join   cbe_curing_bladder_in bla on bla.bladder_code = #RightCasule#
)
union all

    select parm_value from cpt_curing_tech_parm_data where objid in (
  select case when bla.dummy1 >=0 and bla.dummy1<=100 then tech.FIRST_shaping_press_1 
  when bla.dummy1 >100 and bla.dummy1<=200 then tech.FIRST_shaping_press_2 else tech.FIRST_shaping_press_3 end press
     from ( select distinct FIRST_shaping_press_1 , FIRST_shaping_press_2 , FIRST_shaping_press_3 from cpt_curing_tech y where y.material_id = (
select  x1.material_id  from  bpm_production x left join bpp_plan_detail x1 on x1.objid = x.plan_detail_id where x.green_tyre_no = #LeftTyreNo#)
and y.delete_flag = 0  ) tech
left join   cbe_curing_bladder_in bla on bla.bladder_code = #LeftCapsule#
)
union all

    select parm_value from cpt_curing_tech_parm_data where objid in (
  select case when bla.dummy1 >=0 and bla.dummy1<=100 then tech.FIRST_shaping_press_1 
  when bla.dummy1 >100 and bla.dummy1<=200 then tech.FIRST_shaping_press_2 else tech.FIRST_shaping_press_3 end press
     from ( select distinct FIRST_shaping_press_1 , FIRST_shaping_press_2 , FIRST_shaping_press_3 from cpt_curing_tech y where y.material_id = (
select  x1.material_id  from  bpm_production x left join bpp_plan_detail x1 on x1.objid = x.plan_detail_id where x.green_tyre_no = #RightTyreNo#)
and y.delete_flag = 0  ) tech
left join   cbe_curing_bladder_in bla on bla.bladder_code = #RightCasule#
)

       ]]>
    </select>

    <select id="GetBladderBKInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
select bladder_state from cbe_curing_bladder_in  where  bladder_code = #LBladder# or bladder_code = #RBladder#
       ]]>
    </select>
    <select id="GetCppKmEquip" parameterClass="map" resultClass="Row">
      <![CDATA[
      select * from cpp_kmequip where equip_code = #equipCode#
       ]]>
    </select>
    <update id="UpdCppKmEquip" parameterClass="map">
      <![CDATA[
update cpp_kmequip set record_time = sysdate,sy_min = #symin# where equip_code = #equipCode#
       ]]>
    </update>
    <insert id="InsertCppKmEquip" parameterClass="map" resultClass="Row">
      <![CDATA[
       insert into cpp_kmequip(equip_code,sy_min) values (#equipCode#,#symin#)
       ]]>
    </insert>
    <select id="GetKMEquipInfo" parameterClass="map" resultClass="Row">
      <![CDATA[
select A||','||B||','||C||','||D||','||E||','||F||','||G||','||H||','||I||','||J||','||K||','||L EQUIPCODE from cpp_kmuser  WHERE USER_ID = #UserID#
  
       ]]>
    </select>

    <delete id="DeleteKmEquip" parameterClass="map">
      <![CDATA[
delete from cpp_kmequip where equip_code = #EquipCode#
       ]]>
    </delete>
    <select id="GetKMEquipAInfo" parameterClass="map" resultClass="Row">
      <![CDATA[select equip_code,sy_min from cpp_kmequip WHERE EQUIP_CODE IN ($ArrEquip$)  order by sy_min
       ]]>
    </select>


    <select id="GetHCQStopTimeAndMouldYRTime" parameterClass="map" resultClass="Row">
      <![CDATA[
SELECT NVL(c.parm_value,0) MouldYRTime ,NVL(E.parm_value,0) ZKJJ  
FROM  cpt_curing_tech a 
left join cpt_curing_tech_parm_data c on c.objid = a.mouldyr_time
left join cpt_curing_tech_parm_data E on E.objid = a.Zkjj
WHERE A.objid = #Techid#
       ]]>
    </select>
    <select id="GetBladderLS" parameterClass="map" resultClass="Row">
      <![CDATA[
select nvl(LSGD,0) LSGD from (
select case when to_number(a.dummy1)>=0 and to_number(a.dummy1)<100 then c1.parm_value 
when to_number(a.dummy1)>=100 and to_number(a.dummy1) < 200 then c2.parm_value else c3.parm_value end lsgd
  from  cbe_curing_bladder_in a
LEFT JOIN CPP_CURING_PLAN_DETAIL X ON X.OBJID = #Plandetailid#
left join cpt_curing_tech b on b.objid = X.TECH_ID
left join cpt_curing_tech_parm_data c1 on c1.objid = b.BLADDER_TENSILE_HEIGHT1
left join cpt_curing_tech_parm_data c2 on c2.objid = b.BLADDER_TENSILE_HEIGHT2
left join cpt_curing_tech_parm_data c3 on c3.objid = b.BLADDER_TENSILE_HEIGHT3
where a.bladder_code = #BladderNo# and a.delete_flag = 0
)
       ]]>
    </select>
    
  </statements>
</sqlMap>
